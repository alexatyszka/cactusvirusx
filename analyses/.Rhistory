library("knitr")
metadata.loc <- 'https://raw.githubusercontent.com/pseudocrater/cactusvirusx/master/data/cvx_hostdata_v3.csv'
aln.fasta.loc <- 'https://raw.githubusercontent.com/pseudocrater/cactusvirusx/master/data/genbank_KR_viruses_consensus_aln.fasta'
#Notes: These have been exported from geneious, aligned using MAFFT[KR], exported as both .fasta and as .csv for relevant columns.
#Note: For .fasta files, U has been converted to T, and then "KT8" to "KU8" to conserve naming.
#KT15 ->KU15
#KT6 -> KU6
#Notes on translating ref seq names to organism names:  gsub("NC_002815", "Cactus virus X_AF308158"; "NC_006059", "Zygocactus virus X_AY366208"; "NC_011659", "Schlumbergera virus X_AY366207";"NC_024458", "Pitaya virus X_JF930327"
#Note: hosts have been added to organisms that lacked them.
cvx.init.aln.fasta <- getURL(aln.fasta.loc)
cvx.seq.metadata.csv <-getURL(metadata.loc)
write(x=cvx.seq.metadata.csv, file='cvx.seq.metadata.csv')
cvx.metadata <- read.csv('cvx.seq.metadata.csv', stringsAsFactors = FALSE)
#alphabetize metadata, only needs to be done once:
#cvx.metadata <- cvx.metadata[order(cvx.metadata$Name),]
#write.csv(cvx.metadata, file="test.csv")
#cvx.metadata <- read.csv('test.csv', stringsAsFactors = FALSE)
write(x=cvx.seq.metadata.csv, file='cvx.seq.metadata.csv')
write(cvx.init.aln.fasta, file = 'cvx.init.aln.fasta')
cacti.aln <- read.dna(file = 'cvx.init.aln.fasta', format= "fasta")
cvx.aln.phy <- read.phyDat('cvx.init.aln.fasta', format='fasta', type='DNA')
cvx.aln.bin <- as.DNAbin(cvx.aln.phy)
cvx.nj <- NJ(dist.dna(cvx.aln.bin))
write.tree(cvx.nj, file="cvx.njtree.nwk")
nj.gg <- read.tree(file="cvx.njtree.nwk")
nj.gg <- midpoint.root(nj.gg)
#create vector for host information
hostinfo <- data.frame(nj.gg$tip.label)
#rename tree tips and populate vector
tip.rename.org = function(tree,dataframe){
for(i in 1:length(tree$tip.label)){
hostinfo$nj.gg.tip.label[i] <<- dataframe$host[grep(tree$tip.label[i],dataframe$Name)]
#uncomment these for troubleshooting:
#print(i)
#print(tree$tip.label[i])
#print(dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)])
tree$tip.label[i]<-dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)]
}
tree
}
nj.gg <- read.tree(file="cvx.njtree.nwk")
nj.gg <- midpoint.root(nj.gg)
nj.gg <- tip.rename.org(nj.gg,cvx.metadata)
#create vector for host information
hostinfo <- data.frame(nj.gg$tip.label)
#rename tree tips and populate vector
tip.rename.org = function(tree,dataframe){
for(i in 1:length(tree$tip.label)){
hostinfo$nj.gg.tip.label[i] <<- dataframe$host[grep(tree$tip.label[i],dataframe$Name)]
#uncomment these for troubleshooting:
print(i)
print(tree$tip.label[i])
print(dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)])
tree$tip.label[i]<-dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)]
}
tree
}
nj.gg <- read.tree(file="cvx.njtree.nwk")
nj.gg <- midpoint.root(nj.gg)
nj.gg <- tip.rename.org(nj.gg,cvx.metadata)
nj.gg$tip.label[34]
nj.gg$tip.label[35]
metadata.loc <- 'https://raw.githubusercontent.com/pseudocrater/cactusvirusx/master/data/cvx_hostdata_v3.csv'
aln.fasta.loc <- 'https://raw.githubusercontent.com/pseudocrater/cactusvirusx/master/data/genbank_KR_viruses_consensus_aln.fasta'
#Notes: These have been exported from geneious, aligned using MAFFT[KR], exported as both .fasta and as .csv for relevant columns.
#Note: For .fasta files, U has been converted to T, and then "KT8" to "KU8" to conserve naming.
#KT15 ->KU15
#KT6 -> KU6
#Notes on translating ref seq names to organism names:  gsub("NC_002815", "Cactus virus X_AF308158"; "NC_006059", "Zygocactus virus X_AY366208"; "NC_011659", "Schlumbergera virus X_AY366207";"NC_024458", "Pitaya virus X_JF930327"
#Note: hosts have been added to organisms that lacked them.
cvx.init.aln.fasta <- getURL(aln.fasta.loc)
cvx.seq.metadata.csv <-getURL(metadata.loc)
write(x=cvx.seq.metadata.csv, file='cvx.seq.metadata.csv')
cvx.metadata <- read.csv('cvx.seq.metadata.csv', stringsAsFactors = FALSE)
#alphabetize metadata, only needs to be done once:
#cvx.metadata <- cvx.metadata[order(cvx.metadata$Name),]
#write.csv(cvx.metadata, file="test.csv")
#cvx.metadata <- read.csv('test.csv', stringsAsFactors = FALSE)
write(x=cvx.seq.metadata.csv, file='cvx.seq.metadata.csv')
write(cvx.init.aln.fasta, file = 'cvx.init.aln.fasta')
cacti.aln <- read.dna(file = 'cvx.init.aln.fasta', format= "fasta")
cvx.aln.phy <- read.phyDat('cvx.init.aln.fasta', format='fasta', type='DNA')
cvx.aln.bin <- as.DNAbin(cvx.aln.phy)
cvx.nj <- NJ(dist.dna(cvx.aln.bin))
write.tree(cvx.nj, file="cvx.njtree.nwk")
nj.gg <- read.tree(file="cvx.njtree.nwk")
nj.gg <- midpoint.root(nj.gg)
#create vector for host information
hostinfo <- data.frame(nj.gg$tip.label)
#rename tree tips and populate vector
tip.rename.org = function(tree,dataframe){
for(i in 1:length(tree$tip.label)){
hostinfo$nj.gg.tip.label[i] <<- dataframe$host[grep(tree$tip.label[i],dataframe$Name)]
#uncomment these for troubleshooting:
print(i)
print(tree$tip.label[i])
print(dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)])
tree$tip.label[i]<-dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)]
}
tree
}
nj.gg <- read.tree(file="cvx.njtree.nwk")
nj.gg <- midpoint.root(nj.gg)
nj.gg <- tip.rename.org(nj.gg,cvx.metadata)
nj.gg$tip.label[50]
nj.gg$tip.label[51]
metadata.loc <- 'https://raw.githubusercontent.com/pseudocrater/cactusvirusx/master/data/cvx_hostdata_v3.csv'
aln.fasta.loc <- 'https://raw.githubusercontent.com/pseudocrater/cactusvirusx/master/data/genbank_KR_viruses_consensus_aln.fasta'
#Notes: These have been exported from geneious, aligned using MAFFT[KR], exported as both .fasta and as .csv for relevant columns.
#Note: For .fasta files, U has been converted to T, and then "KT8" to "KU8" to conserve naming.
#KT15 ->KU15
#KT6 -> KU6
#Notes on translating ref seq names to organism names:  gsub("NC_002815", "Cactus virus X_AF308158"; "NC_006059", "Zygocactus virus X_AY366208"; "NC_011659", "Schlumbergera virus X_AY366207";"NC_024458", "Pitaya virus X_JF930327"
#Note: hosts have been added to organisms that lacked them.
cvx.init.aln.fasta <- getURL(aln.fasta.loc)
cvx.seq.metadata.csv <-getURL(metadata.loc)
write(x=cvx.seq.metadata.csv, file='cvx.seq.metadata.csv')
cvx.metadata <- read.csv('cvx.seq.metadata.csv', stringsAsFactors = FALSE)
#alphabetize metadata, only needs to be done once:
#cvx.metadata <- cvx.metadata[order(cvx.metadata$Name),]
#write.csv(cvx.metadata, file="test.csv")
#cvx.metadata <- read.csv('test.csv', stringsAsFactors = FALSE)
write(x=cvx.seq.metadata.csv, file='cvx.seq.metadata.csv')
write(cvx.init.aln.fasta, file = 'cvx.init.aln.fasta')
cacti.aln <- read.dna(file = 'cvx.init.aln.fasta', format= "fasta")
cvx.aln.phy <- read.phyDat('cvx.init.aln.fasta', format='fasta', type='DNA')
cvx.aln.bin <- as.DNAbin(cvx.aln.phy)
cvx.nj <- NJ(dist.dna(cvx.aln.bin))
write.tree(cvx.nj, file="cvx.njtree.nwk")
nj.gg <- read.tree(file="cvx.njtree.nwk")
nj.gg <- midpoint.root(nj.gg)
#create vector for host information
hostinfo <- data.frame(nj.gg$tip.label)
#rename tree tips and populate vector
tip.rename.org = function(tree,dataframe){
for(i in 1:length(tree$tip.label)){
hostinfo$nj.gg.tip.label[i] <<- dataframe$host[grep(tree$tip.label[i],dataframe$Name)]
#uncomment these for troubleshooting:
print(i)
print(tree$tip.label[i])
print(dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)])
tree$tip.label[i]<-dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)]
}
tree
}
nj.gg <- read.tree(file="cvx.njtree.nwk")
nj.gg <- midpoint.root(nj.gg)
nj.gg <- tip.rename.org(nj.gg,cvx.metadata)
nj.gg[51]
nj.gg$tip.label[51]
nj.gg$tip.label[52]
nj.gg$tip.label[50]
cvx.metadata$Organism[51]
cvx.metadata$Organism[123]
cvx.metadata$Organism[122]
cvx.metadata$Name[122]
cvx.metadata$Name[121]
library(ggtree) # tree plotting
library(DECIPHER)
library(RCurl) # web page loading
library(phangorn)
library(phytools)
library(ape)
library("knitr")
metadata.loc <- 'https://raw.githubusercontent.com/pseudocrater/cactusvirusx/master/data/cvx_hostdata_v3.csv'
aln.fasta.loc <- 'https://raw.githubusercontent.com/pseudocrater/cactusvirusx/master/data/genbank_KR_viruses_consensus_aln.fasta'
#Notes: These have been exported from geneious, aligned using MAFFT[KR], exported as both .fasta and as .csv for relevant columns.
#Note: For .fasta files, U has been converted to T, and then "KT8" to "KU8" to conserve naming.
#KT15 ->KU15
#KT6 -> KU6
#Notes on translating ref seq names to organism names:  gsub("NC_002815", "Cactus virus X_AF308158"; "NC_006059", "Zygocactus virus X_AY366208"; "NC_011659", "Schlumbergera virus X_AY366207";"NC_024458", "Pitaya virus X_JF930327"
#Note: hosts have been added to organisms that lacked them.
cvx.init.aln.fasta <- getURL(aln.fasta.loc)
cvx.seq.metadata.csv <-getURL(metadata.loc)
write(x=cvx.seq.metadata.csv, file='cvx.seq.metadata.csv')
cvx.metadata <- read.csv('cvx.seq.metadata.csv', stringsAsFactors = FALSE)
#alphabetize metadata, only needs to be done once:
#cvx.metadata <- cvx.metadata[order(cvx.metadata$Name),]
#write.csv(cvx.metadata, file="test.csv")
#cvx.metadata <- read.csv('test.csv', stringsAsFactors = FALSE)
write(x=cvx.seq.metadata.csv, file='cvx.seq.metadata.csv')
write(cvx.init.aln.fasta, file = 'cvx.init.aln.fasta')
cacti.aln <- read.dna(file = 'cvx.init.aln.fasta', format= "fasta")
cvx.aln.phy <- read.phyDat('cvx.init.aln.fasta', format='fasta', type='DNA')
cvx.aln.bin <- as.DNAbin(cvx.aln.phy)
cvx.nj <- NJ(dist.dna(cvx.aln.bin))
write.tree(cvx.nj, file="cvx.njtree.nwk")
nj.gg <- read.tree(file="cvx.njtree.nwk")
nj.gg <- midpoint.root(nj.gg)
#create vector for host information
hostinfo <- data.frame(nj.gg$tip.label)
#rename tree tips and populate vector
tip.rename.org = function(tree,dataframe){
for(i in 1:length(tree$tip.label)){
hostinfo$nj.gg.tip.label[i] <<- dataframe$host[grep(tree$tip.label[i],dataframe$Name)]
#uncomment these for troubleshooting:
print(i)
print(tree$tip.label[i])
print(dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)])
tree$tip.label[i]<-dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)]
}
tree
}
nj.gg <- read.tree(file="cvx.njtree.nwk")
nj.gg <- midpoint.root(nj.gg)
nj.gg <- tip.rename.org(nj.gg,cvx.metadata)
nj.gg[53]
nj.gg$tip.label[53]
metadata.loc <- 'https://raw.githubusercontent.com/pseudocrater/cactusvirusx/master/data/cvx_hostdata_v3.csv'
aln.fasta.loc <- 'https://raw.githubusercontent.com/pseudocrater/cactusvirusx/master/data/genbank_KR_viruses_consensus_aln.fasta'
#Notes: These have been exported from geneious, aligned using MAFFT[KR], exported as both .fasta and as .csv for relevant columns.
#Note: For .fasta files, U has been converted to T, and then "KT8" to "KU8" to conserve naming.
#KT15 ->KU15
#KT6 -> KU6
#Notes on translating ref seq names to organism names:  gsub("NC_002815", "Cactus virus X_AF308158"; "NC_006059", "Zygocactus virus X_AY366208"; "NC_011659", "Schlumbergera virus X_AY366207";"NC_024458", "Pitaya virus X_JF930327"
#Note: hosts have been added to organisms that lacked them.
cvx.init.aln.fasta <- getURL(aln.fasta.loc)
cvx.seq.metadata.csv <-getURL(metadata.loc)
write(x=cvx.seq.metadata.csv, file='cvx.seq.metadata.csv')
cvx.metadata <- read.csv('cvx.seq.metadata.csv', stringsAsFactors = FALSE)
#alphabetize metadata, only needs to be done once:
#cvx.metadata <- cvx.metadata[order(cvx.metadata$Name),]
#write.csv(cvx.metadata, file="test.csv")
#cvx.metadata <- read.csv('test.csv', stringsAsFactors = FALSE)
write(x=cvx.seq.metadata.csv, file='cvx.seq.metadata.csv')
write(cvx.init.aln.fasta, file = 'cvx.init.aln.fasta')
cacti.aln <- read.dna(file = 'cvx.init.aln.fasta', format= "fasta")
cvx.aln.phy <- read.phyDat('cvx.init.aln.fasta', format='fasta', type='DNA')
cvx.aln.bin <- as.DNAbin(cvx.aln.phy)
cvx.nj <- NJ(dist.dna(cvx.aln.bin))
write.tree(cvx.nj, file="cvx.njtree.nwk")
nj.gg <- read.tree(file="cvx.njtree.nwk")
nj.gg <- midpoint.root(nj.gg)
#create vector for host information
hostinfo <- data.frame(nj.gg$tip.label)
#rename tree tips and populate vector
tip.rename.org = function(tree,dataframe){
for(i in 1:length(tree$tip.label)){
hostinfo$nj.gg.tip.label[i] <<- dataframe$host[grep(tree$tip.label[i],dataframe$Name)]
#uncomment these for troubleshooting:
print(i)
print(tree$tip.label[i])
print(dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)])
tree$tip.label[i]<-dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)]
}
tree
}
nj.gg <- read.tree(file="cvx.njtree.nwk")
nj.gg <- midpoint.root(nj.gg)
nj.gg <- tip.rename.org(nj.gg,cvx.metadata)
metadata.loc <- 'https://raw.githubusercontent.com/pseudocrater/cactusvirusx/master/data/cvx_hostdata_v3.csv'
aln.fasta.loc <- 'https://raw.githubusercontent.com/pseudocrater/cactusvirusx/master/data/genbank_KR_viruses_consensus_aln.fasta'
#Notes: These have been exported from geneious, aligned using MAFFT[KR], exported as both .fasta and as .csv for relevant columns.
#Note: For .fasta files, U has been converted to T, and then "KT8" to "KU8" to conserve naming.
#KT15 ->KU15
#KT6 -> KU6
#Notes on translating ref seq names to organism names:  gsub("NC_002815", "Cactus virus X_AF308158"; "NC_006059", "Zygocactus virus X_AY366208"; "NC_011659", "Schlumbergera virus X_AY366207";"NC_024458", "Pitaya virus X_JF930327"
#Note: hosts have been added to organisms that lacked them.
cvx.init.aln.fasta <- getURL(aln.fasta.loc)
cvx.seq.metadata.csv <-getURL(metadata.loc)
write(x=cvx.seq.metadata.csv, file='cvx.seq.metadata.csv')
cvx.metadata <- read.csv('cvx.seq.metadata.csv', stringsAsFactors = FALSE)
#alphabetize metadata, only needs to be done once:
#cvx.metadata <- cvx.metadata[order(cvx.metadata$Name),]
#write.csv(cvx.metadata, file="test.csv")
#cvx.metadata <- read.csv('test.csv', stringsAsFactors = FALSE)
write(x=cvx.seq.metadata.csv, file='cvx.seq.metadata.csv')
write(cvx.init.aln.fasta, file = 'cvx.init.aln.fasta')
cacti.aln <- read.dna(file = 'cvx.init.aln.fasta', format= "fasta")
cvx.aln.phy <- read.phyDat('cvx.init.aln.fasta', format='fasta', type='DNA')
cvx.aln.bin <- as.DNAbin(cvx.aln.phy)
cvx.nj <- NJ(dist.dna(cvx.aln.bin))
write.tree(cvx.nj, file="cvx.njtree.nwk")
nj.gg <- read.tree(file="cvx.njtree.nwk")
nj.gg <- midpoint.root(nj.gg)
#create vector for host information
hostinfo <- data.frame(nj.gg$tip.label)
#rename tree tips and populate vector
tip.rename.org = function(tree,dataframe){
for(i in 1:length(tree$tip.label)){
hostinfo$nj.gg.tip.label[i] <<- dataframe$host[grep(tree$tip.label[i],dataframe$Name)]
#uncomment these for troubleshooting:
print(i)
print(tree$tip.label[i])
print(dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)])
tree$tip.label[i]<-dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)]
}
tree
}
nj.gg <- read.tree(file="cvx.njtree.nwk")
nj.gg <- midpoint.root(nj.gg)
nj.gg <- tip.rename.org(nj.gg,cvx.metadata)
cvx.metadata$Name[122]
cvx.metadata$Name[121]
cvx.metadata$Name[123]
unlink("cvx.init.aln.fasta")
unlink("cvx.seq.metadata.csv")
unlink("cvx.njtree.nwk")
metadata.loc <- 'https://raw.githubusercontent.com/pseudocrater/cactusvirusx/master/data/cvx_hostdata_v3.csv'
aln.fasta.loc <- 'https://raw.githubusercontent.com/pseudocrater/cactusvirusx/master/data/genbank_KR_viruses_consensus_aln.fasta'
#Notes: These have been exported from geneious, aligned using MAFFT[KR], exported as both .fasta and as .csv for relevant columns.
#Note: For .fasta files, U has been converted to T, and then "KT8" to "KU8" to conserve naming.
#KT15 ->KU15
#KT6 -> KU6
#Notes on translating ref seq names to organism names:  gsub("NC_002815", "Cactus virus X_AF308158"; "NC_006059", "Zygocactus virus X_AY366208"; "NC_011659", "Schlumbergera virus X_AY366207";"NC_024458", "Pitaya virus X_JF930327"
#Note: hosts have been added to organisms that lacked them.
cvx.init.aln.fasta <- getURL(aln.fasta.loc)
cvx.seq.metadata.csv <-getURL(metadata.loc)
write(x=cvx.seq.metadata.csv, file='cvx.seq.metadata.csv')
cvx.metadata <- read.csv('cvx.seq.metadata.csv', stringsAsFactors = FALSE)
#alphabetize metadata, only needs to be done once:
#cvx.metadata <- cvx.metadata[order(cvx.metadata$Name),]
#write.csv(cvx.metadata, file="test.csv")
#cvx.metadata <- read.csv('test.csv', stringsAsFactors = FALSE)
write(x=cvx.seq.metadata.csv, file='cvx.seq.metadata.csv')
write(cvx.init.aln.fasta, file = 'cvx.init.aln.fasta')
cacti.aln <- read.dna(file = 'cvx.init.aln.fasta', format= "fasta")
cvx.aln.phy <- read.phyDat('cvx.init.aln.fasta', format='fasta', type='DNA')
cvx.aln.bin <- as.DNAbin(cvx.aln.phy)
cvx.nj <- NJ(dist.dna(cvx.aln.bin))
write.tree(cvx.nj, file="cvx.njtree.nwk")
nj.gg <- read.tree(file="cvx.njtree.nwk")
nj.gg <- midpoint.root(nj.gg)
#create vector for host information
hostinfo <- data.frame(nj.gg$tip.label)
#rename tree tips and populate vector
tip.rename.org = function(tree,dataframe){
for(i in 1:length(tree$tip.label)){
hostinfo$nj.gg.tip.label[i] <<- dataframe$host[grep(tree$tip.label[i],dataframe$Name)]
#uncomment these for troubleshooting:
print(i)
print(tree$tip.label[i])
print(dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)])
tree$tip.label[i]<-dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)]
}
tree
}
nj.gg <- read.tree(file="cvx.njtree.nwk")
nj.gg <- midpoint.root(nj.gg)
nj.gg <- tip.rename.org(nj.gg,cvx.metadata)
cvx.metadata$Name[123]
nj.gg$tip.label[52]
nj.gg$tip.label[51]
nj.gg$tip.label[53]
unlink("cvx.init.aln.fasta")
unlink("cvx.seq.metadata.csv")
unlink("cvx.njtree.nwk")
metadata.loc <- 'https://raw.githubusercontent.com/pseudocrater/cactusvirusx/master/data/cvx_hostdata_v3.csv'
aln.fasta.loc <- 'https://raw.githubusercontent.com/pseudocrater/cactusvirusx/master/data/genbank_KR_viruses_consensus_aln.fasta'
#Notes: These have been exported from geneious, aligned using MAFFT[KR], exported as both .fasta and as .csv for relevant columns.
#Note: For .fasta files, U has been converted to T, and then "KT8" to "KU8" to conserve naming.
#KT15 ->KU15
#KT6 -> KU6
#Notes on translating ref seq names to organism names:  gsub("NC_002815", "Cactus virus X_AF308158"; "NC_006059", "Zygocactus virus X_AY366208"; "NC_011659", "Schlumbergera virus X_AY366207";"NC_024458", "Pitaya virus X_JF930327"
#Note: hosts have been added to organisms that lacked them.
cvx.init.aln.fasta <- getURL(aln.fasta.loc)
cvx.seq.metadata.csv <-getURL(metadata.loc)
write(x=cvx.seq.metadata.csv, file='cvx.seq.metadata.csv')
cvx.metadata <- read.csv('cvx.seq.metadata.csv', stringsAsFactors = FALSE)
#alphabetize metadata, only needs to be done once:
#cvx.metadata <- cvx.metadata[order(cvx.metadata$Name),]
#write.csv(cvx.metadata, file="test.csv")
#cvx.metadata <- read.csv('test.csv', stringsAsFactors = FALSE)
write(x=cvx.seq.metadata.csv, file='cvx.seq.metadata.csv')
write(cvx.init.aln.fasta, file = 'cvx.init.aln.fasta')
cacti.aln <- read.dna(file = 'cvx.init.aln.fasta', format= "fasta")
cvx.aln.phy <- read.phyDat('cvx.init.aln.fasta', format='fasta', type='DNA')
cvx.aln.bin <- as.DNAbin(cvx.aln.phy)
cvx.nj <- NJ(dist.dna(cvx.aln.bin))
write.tree(cvx.nj, file="cvx.njtree.nwk")
nj.gg <- read.tree(file="cvx.njtree.nwk")
nj.gg <- midpoint.root(nj.gg)
#create vector for host information
hostinfo <- data.frame(nj.gg$tip.label)
#rename tree tips and populate vector
tip.rename.org = function(tree,dataframe){
for(i in 1:length(tree$tip.label)){
hostinfo$nj.gg.tip.label[i] <<- dataframe$host[grep(tree$tip.label[i],dataframe$Name)]
#uncomment these for troubleshooting:
print(i)
print(tree$tip.label[i])
print(dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)])
tree$tip.label[i]<-dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)]
}
tree
}
nj.gg <- read.tree(file="cvx.njtree.nwk")
nj.gg <- midpoint.root(nj.gg)
nj.gg <- tip.rename.org(nj.gg,cvx.metadata)
nj.gg$tip.label[53]
cvx.metadata$Name[123]
metadata.loc <- 'https://raw.githubusercontent.com/pseudocrater/cactusvirusx/master/data/cvx_hostdata_v3.csv'
aln.fasta.loc <- 'https://raw.githubusercontent.com/pseudocrater/cactusvirusx/master/data/genbank_KR_viruses_consensus_aln.fasta'
#Notes: These have been exported from geneious, aligned using MAFFT[KR], exported as both .fasta and as .csv for relevant columns.
#Note: For .fasta files, U has been converted to T, and then "KT8" to "KU8" to conserve naming.
#KT15 ->KU15
#KT6 -> KU6
#Notes on translating ref seq names to organism names:  gsub("NC_002815", "Cactus virus X_AF308158"; "NC_006059", "Zygocactus virus X_AY366208"; "NC_011659", "Schlumbergera virus X_AY366207";"NC_024458", "Pitaya virus X_JF930327"
#Note: hosts have been added to organisms that lacked them.
cvx.init.aln.fasta <- getURL(aln.fasta.loc)
cvx.seq.metadata.csv <-getURL(metadata.loc)
write(x=cvx.seq.metadata.csv, file='cvx.seq.metadata.csv')
cvx.metadata <- read.csv('cvx.seq.metadata.csv', stringsAsFactors = FALSE)
#alphabetize metadata, only needs to be done once:
#cvx.metadata <- cvx.metadata[order(cvx.metadata$Name),]
#write.csv(cvx.metadata, file="test.csv")
#cvx.metadata <- read.csv('test.csv', stringsAsFactors = FALSE)
write(x=cvx.seq.metadata.csv, file='cvx.seq.metadata.csv')
write(cvx.init.aln.fasta, file = 'cvx.init.aln.fasta')
cacti.aln <- read.dna(file = 'cvx.init.aln.fasta', format= "fasta")
cvx.aln.phy <- read.phyDat('cvx.init.aln.fasta', format='fasta', type='DNA')
cvx.aln.bin <- as.DNAbin(cvx.aln.phy)
cvx.nj <- NJ(dist.dna(cvx.aln.bin))
write.tree(cvx.nj, file="cvx.njtree.nwk")
nj.gg <- read.tree(file="cvx.njtree.nwk")
nj.gg <- midpoint.root(nj.gg)
#create vector for host information
hostinfo <- data.frame(nj.gg$tip.label)
#rename tree tips and populate vector
tip.rename.org = function(tree,dataframe){
for(i in 1:length(tree$tip.label)){
hostinfo$nj.gg.tip.label[i] <<- dataframe$host[grep(tree$tip.label[i],dataframe$Name)]
#uncomment these for troubleshooting:
print(i)
print(tree$tip.label[i])
print(dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)])
tree$tip.label[i]<-dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)]
}
tree
}
nj.gg <- read.tree(file="cvx.njtree.nwk")
nj.gg <- midpoint.root(nj.gg)
nj.gg <- tip.rename.org(nj.gg,cvx.metadata)
#create vector for host information
hostinfo <- data.frame(nj.gg$tip.label)
#rename tree tips and populate vector
tip.rename.org = function(tree,dataframe){
for(i in 1:length(tree$tip.label)){
hostinfo$nj.gg.tip.label[i] <<- dataframe$host[grep(tree$tip.label[i],dataframe$Name)]
#uncomment these for troubleshooting:
print(i)
print(tree$tip.label[i])
print(dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)])
tree$tip.label[i]<-dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)]
}
tree
}
nj.gg <- read.tree(file="cvx.njtree.nwk")
nj.gg <- midpoint.root(nj.gg)
nj.gg <- tip.rename.org(nj.gg,cvx.metadata)
metadata.loc <- 'https://raw.githubusercontent.com/pseudocrater/cactusvirusx/master/data/cvx_hostdata_v3.csv'
aln.fasta.loc <- 'https://raw.githubusercontent.com/pseudocrater/cactusvirusx/master/data/genbank_KR_viruses_consensus_aln.fasta'
#Notes: These have been exported from geneious, aligned using MAFFT[KR], exported as both .fasta and as .csv for relevant columns.
#Note: For .fasta files, U has been converted to T, and then "KT8" to "KU8" to conserve naming.
#KT15 ->KU15
#KT6 -> KU6
#Notes on translating ref seq names to organism names:  gsub("NC_002815", "Cactus virus X_AF308158"; "NC_006059", "Zygocactus virus X_AY366208"; "NC_011659", "Schlumbergera virus X_AY366207";"NC_024458", "Pitaya virus X_JF930327"
#Note: hosts have been added to organisms that lacked them.
cvx.init.aln.fasta <- getURL(aln.fasta.loc)
cvx.seq.metadata.csv <-getURL(metadata.loc)
write(x=cvx.seq.metadata.csv, file='cvx.seq.metadata.csv')
metadata.loc <- 'https://raw.githubusercontent.com/pseudocrater/cactusvirusx/master/data/cvx_hostdata_v3.csv'
aln.fasta.loc <- 'https://raw.githubusercontent.com/pseudocrater/cactusvirusx/master/data/genbank_KR_viruses_consensus_aln.fasta'
#Notes: These have been exported from geneious, aligned using MAFFT[KR], exported as both .fasta and as .csv for relevant columns.
#Note: For .fasta files, U has been converted to T, and then "KT8" to "KU8" to conserve naming.
#KT15 ->KU15
#KT6 -> KU6
#Notes on translating ref seq names to organism names:  gsub("NC_002815", "Cactus virus X_AF308158"; "NC_006059", "Zygocactus virus X_AY366208"; "NC_011659", "Schlumbergera virus X_AY366207";"NC_024458", "Pitaya virus X_JF930327"
#Note: hosts have been added to organisms that lacked them.
cvx.init.aln.fasta <- getURL(aln.fasta.loc)
cvx.seq.metadata.csv <-getURL(metadata.loc)
write(x=cvx.seq.metadata.csv, file='cvx.seq.metadata.csv')
cvx.metadata <- read.csv('cvx.seq.metadata.csv', stringsAsFactors = FALSE)
#alphabetize metadata, only needs to be done once:
#cvx.metadata <- cvx.metadata[order(cvx.metadata$Name),]
#write.csv(cvx.metadata, file="test.csv")
#cvx.metadata <- read.csv('test.csv', stringsAsFactors = FALSE)
write(x=cvx.seq.metadata.csv, file='cvx.seq.metadata.csv')
write(cvx.init.aln.fasta, file = 'cvx.init.aln.fasta')
cacti.aln <- read.dna(file = 'cvx.init.aln.fasta', format= "fasta")
cvx.aln.phy <- read.phyDat('cvx.init.aln.fasta', format='fasta', type='DNA')
cvx.aln.bin <- as.DNAbin(cvx.aln.phy)
cvx.nj <- NJ(dist.dna(cvx.aln.bin))
write.tree(cvx.nj, file="cvx.njtree.nwk")
nj.gg <- read.tree(file="cvx.njtree.nwk")
nj.gg <- midpoint.root(nj.gg)
#create vector for host information
hostinfo <- data.frame(nj.gg$tip.label)
#rename tree tips and populate vector
tip.rename.org = function(tree,dataframe){
for(i in 1:length(tree$tip.label)){
hostinfo$nj.gg.tip.label[i] <<- dataframe$host[grep(tree$tip.label[i],dataframe$Name)]
#uncomment these for troubleshooting:
print(i)
print(tree$tip.label[i])
print(dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)])
tree$tip.label[i]<-dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)]
}
tree
}
nj.gg <- read.tree(file="cvx.njtree.nwk")
nj.gg <- midpoint.root(nj.gg)
nj.gg <- tip.rename.org(nj.gg,cvx.metadata)
nj.gg$tip.label[53]
install.packages('BiocManager', repos=c('https://cran.rstudio.com'), ask=FALSE)
install.packages("BiocManager", repos = c("https://cran.rstudio.com"), ask = FALSE)
install.packages("BiocManager", repos = c("https://cran.rstudio.com"), ask = FALSE)
library(DECIPHER)
library(DECIPHER)
unal.f <- 'cvx.init.aln.fasta'
unal.dna <- readDNAStringSet(unal.f)
al.dan <- AlignTranslation(unal.dna)
