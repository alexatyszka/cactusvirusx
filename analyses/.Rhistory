# geom_tiplab(aes(label=cvx.metadata$Name[1:211]), align = T, linetype = 'blank', na.rm=TRUE, offset=0.2) +
#geom_tiplab(aes(label=nj.gg$tip.label[1:211]), align = T, linetype = 'blank', na.rm=TRUE, offset=0.3) +
#scale
geom_treescale(x=0, y=60, offset=2, fontsize = 3)+
#node labels:
#geom_text(aes(label=), hjust=0.1) +
xlim(0,1.2)
ggtree(nj.gg, ladderize=T, aes(), show.legend = TRUE,)  %<+% hostinfo +
#name tip labels:
geom_tiplab(aes(label=nj.gg$tip.label[1:211]),fontsize=1, hjust=0, offset=0, align=T, linetype = "dotted")+
#host tip labels:
geom_tiplab(aes(label=hostinfo$nj.gg.tip.label[1:211]), align = T, linetype = 'blank', na.rm=TRUE, offset=0.2) +
# geom_tiplab(aes(label=cvx.metadata$Name[1:211]), align = T, linetype = 'blank', na.rm=TRUE, offset=0.2) +
#geom_tiplab(aes(label=nj.gg$tip.label[1:211]), align = T, linetype = 'blank', na.rm=TRUE, offset=0.3) +
#scale
geom_treescale(x=0, y=60, offset=2, fontsize = 3)+
#node labels:
#geom_text(aes(label=), hjust=0.1) +
xlim(0,1.2)
ggtree(nj.gg, ladderize=T, aes(), show.legend = TRUE,)  %<+% hostinfo +
#name tip labels:
geom_tiplab(aes(label=nj.gg$tip.label[1:211]),font.size=1, hjust=0, offset=0, align=T, linetype = "dotted")+
#host tip labels:
geom_tiplab(aes(label=hostinfo$nj.gg.tip.label[1:211]), align = T, linetype = 'blank', na.rm=TRUE, offset=0.2) +
# geom_tiplab(aes(label=cvx.metadata$Name[1:211]), align = T, linetype = 'blank', na.rm=TRUE, offset=0.2) +
#geom_tiplab(aes(label=nj.gg$tip.label[1:211]), align = T, linetype = 'blank', na.rm=TRUE, offset=0.3) +
#scale
geom_treescale(x=0, y=60, offset=2, fontsize = 3)+
#node labels:
#geom_text(aes(label=), hjust=0.1) +
xlim(0,1.2)
ggtree(nj.gg, ladderize=T, aes(), show.legend = TRUE,)  %<+% hostinfo +
#name tip labels:
geom_tiplab(aes(label=nj.gg$tip.label[1:211]), font.size=1, hjust=0, offset=0, align=T, linetype = "dotted")+
#host tip labels:
geom_tiplab(aes(label=hostinfo$nj.gg.tip.label[1:211]), align = T, linetype = 'blank', na.rm=TRUE, offset=0.2) +
# geom_tiplab(aes(label=cvx.metadata$Name[1:211]), align = T, linetype = 'blank', na.rm=TRUE, offset=0.2) +
#geom_tiplab(aes(label=nj.gg$tip.label[1:211]), align = T, linetype = 'blank', na.rm=TRUE, offset=0.3) +
#scale
geom_treescale(x=0, y=60, offset=2, fontsize = 3)+
#node labels:
#geom_text(aes(label=), hjust=0.1) +
xlim(0,1.2)
ggtree(nj.gg, ladderize=T, aes(), show.legend = TRUE, size=8)  %<+% hostinfo +
#name tip labels:
geom_tiplab(aes(label=nj.gg$tip.label[1:211]), hjust=0, offset=0, align=T, linetype = "dotted")+
#host tip labels:
geom_tiplab(aes(label=hostinfo$nj.gg.tip.label[1:211]), align = T, linetype = 'blank', na.rm=TRUE, offset=0.2) +
# geom_tiplab(aes(label=cvx.metadata$Name[1:211]), align = T, linetype = 'blank', na.rm=TRUE, offset=0.2) +
#geom_tiplab(aes(label=nj.gg$tip.label[1:211]), align = T, linetype = 'blank', na.rm=TRUE, offset=0.3) +
#scale
geom_treescale(x=0, y=60, offset=2, fontsize = 3)+
#node labels:
#geom_text(aes(label=), hjust=0.1) +
xlim(0,1.2)
ggtree(nj.gg, ladderize=T, aes(), show.legend = TRUE, size=1)  %<+% hostinfo +
#name tip labels:
geom_tiplab(aes(label=nj.gg$tip.label[1:211]), hjust=0, offset=0, align=T, linetype = "dotted")+
#host tip labels:
geom_tiplab(aes(label=hostinfo$nj.gg.tip.label[1:211]), align = T, linetype = 'blank', na.rm=TRUE, offset=0.2) +
# geom_tiplab(aes(label=cvx.metadata$Name[1:211]), align = T, linetype = 'blank', na.rm=TRUE, offset=0.2) +
#geom_tiplab(aes(label=nj.gg$tip.label[1:211]), align = T, linetype = 'blank', na.rm=TRUE, offset=0.3) +
#scale
geom_treescale(x=0, y=60, offset=2, fontsize = 3)+
#node labels:
#geom_text(aes(label=), hjust=0.1) +
xlim(0,1.2)
ggtree(nj.gg, ladderize=T, aes(), show.legend = TRUE, size=0.5)  %<+% hostinfo +
#name tip labels:
geom_tiplab(aes(label=nj.gg$tip.label[1:211]), hjust=0, offset=0, align=T, linetype = "dotted")+
#host tip labels:
geom_tiplab(aes(label=hostinfo$nj.gg.tip.label[1:211]), align = T, linetype = 'blank', na.rm=TRUE, offset=0.2) +
# geom_tiplab(aes(label=cvx.metadata$Name[1:211]), align = T, linetype = 'blank', na.rm=TRUE, offset=0.2) +
#geom_tiplab(aes(label=nj.gg$tip.label[1:211]), align = T, linetype = 'blank', na.rm=TRUE, offset=0.3) +
#scale
geom_treescale(x=0, y=60, offset=2, fontsize = 3)+
#node labels:
#geom_text(aes(label=), hjust=0.1) +
xlim(0,1.2)
ggtree(nj.gg, ladderize=T, aes(), show.legend = TRUE, size=0.2)  %<+% hostinfo +
#name tip labels:
geom_tiplab(aes(label=nj.gg$tip.label[1:211]), hjust=0, offset=0, align=T, linetype = "dotted")+
#host tip labels:
geom_tiplab(aes(label=hostinfo$nj.gg.tip.label[1:211]), align = T, linetype = 'blank', na.rm=TRUE, offset=0.2) +
# geom_tiplab(aes(label=cvx.metadata$Name[1:211]), align = T, linetype = 'blank', na.rm=TRUE, offset=0.2) +
#geom_tiplab(aes(label=nj.gg$tip.label[1:211]), align = T, linetype = 'blank', na.rm=TRUE, offset=0.3) +
#scale
geom_treescale(x=0, y=60, offset=2, fontsize = 3)+
#node labels:
#geom_text(aes(label=), hjust=0.1) +
xlim(0,1.2)
filename = paste(gsub(":", "-", Sys.time()),"_names_hosts_nj.pdf",sep="")
ggsave(filename, width = 60, height = 40, units = "cm", limitsize = FALSE)
metadata.loc <- 'https://raw.githubusercontent.com/pseudocrater/cactusvirusx/master/data/cvx_hostdata_v3.csv'
aln.fasta.loc <- 'https://raw.githubusercontent.com/pseudocrater/cactusvirusx/master/data/genbank_KR_viruses_aln_v3.fasta'
cvx.init.aln.fasta <- getURL(aln.fasta.loc)
cvx.seq.metadata.csv <-getURL(metadata.loc)
write(x=cvx.seq.metadata.csv, file='cvx.seq.metadata.csv')
cvx.metadata <- read.csv('cvx.seq.metadata.csv', stringsAsFactors = FALSE)
#alphabetize metadata, only needs to be done once:
#cvx.metadata <- cvx.metadata[order(cvx.metadata$Name),]
#write.csv(cvx.metadata, file="test.csv")
#cvx.metadata <- read.csv('test.csv', stringsAsFactors = FALSE)
write(x=cvx.seq.metadata.csv, file='cvx.seq.metadata.csv')
write(cvx.init.aln.fasta, file = 'cvx.init.aln.fasta')
cacti.aln <- read.dna(file = 'cvx.init.aln.fasta', format= "fasta")
cvx.aln.phy <- read.phyDat('cvx.init.aln.fasta', format='fasta', type='DNA')
cvx.aln.bin <- as.DNAbin(cvx.aln.phy)
cvx.nj <- NJ(dist.dna(cvx.aln.bin))
#cacti.nj <- root(cacti.nj, outgroup=c(7), resolve.root=T)
is.rooted(cvx.nj)
write.tree(cvx.nj, file="cvx.njtree.nwk")
nj.gg <- read.tree(file="cvx.njtree.nwk")
is.rooted(nj.gg)
nj.gg <- midpoint.root(nj.gg)
#find internal node number:
#MRCA(nj.gg, "D29630.1", "GQ179647")
#ape:
#nj.gg <- unroot(nj.gg)
#create vector for host information
hostinfo <- data.frame(nj.gg$tip.label)
#rename tree tips and populate vector
tip.rename.org = function(tree,dataframe){
for(i in 1:length(tree$tip.label)){
hostinfo$nj.gg.tip.label[i] <<- dataframe$host[grep(tree$tip.label[i],dataframe$Name)]
tree$tip.label[i]<-dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)]
}
tree
}
nj.gg <- read.tree(file="cvx.njtree.nwk")
nj.gg <- midpoint.root(nj.gg)
nj.gg <- tip.rename.org(nj.gg,cvx.metadata)
par( mar=c(1, 4, 0, 0))
ggtree(nj.gg, ladderize=T, aes(), show.legend = TRUE, size=0.2)  %<+% hostinfo +
#name tip labels:
geom_tiplab(aes(label=nj.gg$tip.label[1:211]), hjust=0, offset=0, align=T, linetype = "dotted")+
#host tip labels:
geom_tiplab(aes(label=hostinfo$nj.gg.tip.label[1:211]), align = T, linetype = 'blank', na.rm=TRUE, offset=0.2) +
# geom_tiplab(aes(label=cvx.metadata$Name[1:211]), align = T, linetype = 'blank', na.rm=TRUE, offset=0.2) +
#geom_tiplab(aes(label=nj.gg$tip.label[1:211]), align = T, linetype = 'blank', na.rm=TRUE, offset=0.3) +
#scale
geom_treescale(x=0, y=60, offset=2, fontsize = 3)+
#node labels:
#geom_text(aes(label=), hjust=0.1) +
xlim(0,1.2)
filename = paste(gsub(":", "-", Sys.time()),"_names_hosts_nj.pdf",sep="")
ggsave(filename, width = 60, height = 40, units = "cm", limitsize = FALSE)
unlink("cvx.init.aln.fasta")
unlink("cvx.seq.metadata.csv")
unlink("cvx.njtree.nwk")
unlink("cvx.init.aln.fasta")
unlink("cvx.seq.metadata.csv")
unlink("cvx.njtree.nwk")
library(ggtree) # tree plotting
library(DECIPHER)
library(RCurl) # web page loading
library(phangorn)
library(phytools)
library(ape)
library("knitr")
metadata.loc <- 'https://raw.githubusercontent.com/pseudocrater/cactusvirusx/master/data/cvx_hostdata_v3.csv'
aln.fasta.loc <- 'https://raw.githubusercontent.com/pseudocrater/cactusvirusx/master/data/genbank_KR_viruses_aln_v3.fasta'
#Notes: These have been exported from geneious, aligned using MAFFT[KR], exported as both .fasta and as .csv for relevant columns.
#Note: For .fasta files, U has been converted to T, and then "KT8" to "KU8" to conserve naming.
#KT15 ->KU15
#KT6 -> KU6
#Notes on translating ref seq names to organism names:  gsub("NC_002815", "Cactus virus X_AF308158"; "NC_006059", "Zygocactus virus X_AY366208"; "NC_011659", "Schlumbergera virus X_AY366207";"NC_024458", "Pitaya virus X_JF930327"
#Note: hosts have been added to organisms that lacked them.
cvx.init.aln.fasta <- getURL(aln.fasta.loc)
cvx.seq.metadata.csv <-getURL(metadata.loc)
write(x=cvx.seq.metadata.csv, file='cvx.seq.metadata.csv')
cvx.metadata <- read.csv('cvx.seq.metadata.csv', stringsAsFactors = FALSE)
#alphabetize metadata, only needs to be done once:
#cvx.metadata <- cvx.metadata[order(cvx.metadata$Name),]
#write.csv(cvx.metadata, file="test.csv")
#cvx.metadata <- read.csv('test.csv', stringsAsFactors = FALSE)
write(x=cvx.seq.metadata.csv, file='cvx.seq.metadata.csv')
write(cvx.init.aln.fasta, file = 'cvx.init.aln.fasta')
cacti.aln <- read.dna(file = 'cvx.init.aln.fasta', format= "fasta")
cvx.aln.phy <- read.phyDat('cvx.init.aln.fasta', format='fasta', type='DNA')
cvx.aln.bin <- as.DNAbin(cvx.aln.phy)
cvx.nj <- NJ(dist.dna(cvx.aln.bin))
write.tree(cvx.nj, file="cvx.njtree.nwk")
nj.gg <- read.tree(file="cvx.njtree.nwk")
is.rooted(nj.gg)
nj.gg <- midpoint.root(nj.gg)
#create vector for host information
hostinfo <- data.frame(nj.gg$tip.label)
#rename tree tips and populate vector
tip.rename.org = function(tree,dataframe){
for(i in 1:length(tree$tip.label)){
hostinfo$nj.gg.tip.label[i] <<- dataframe$host[grep(tree$tip.label[i],dataframe$Name)]
tree$tip.label[i]<-dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)]
}
tree
}
nj.gg <- read.tree(file="cvx.njtree.nwk")
nj.gg <- midpoint.root(nj.gg)
nj.gg <- tip.rename.org(nj.gg,cvx.metadata)
write.tree(nj.gg, file="cvx.njtree.nwk")
write.tree(cvx.nj, file="cvx.njtree.nwk")
nj.gg <- read.tree(file="cvx.njtree.nwk")
write.tree(cvx.nj, file="cvx.njtree.nwk")
nj.gg <- read.tree(file="cvx.njtree.nwk")
is.rooted(nj.gg)
nj.gg <- midpoint.root(nj.gg)
unlink("cvx.init.aln.fasta")
unlink("cvx.seq.metadata.csv")
unlink("cvx.njtree.nwk")
library(ggtree) # tree plotting
library(DECIPHER)
library(RCurl) # web page loading
library(phangorn)
library(phytools)
library(ape)
library("knitr")
metadata.loc <- 'https://raw.githubusercontent.com/pseudocrater/cactusvirusx/master/data/cvx_hostdata_v3.csv'
aln.fasta.loc <- 'https://raw.githubusercontent.com/pseudocrater/cactusvirusx/master/data/genbank_KR_viruses_consensus_aln.fasta'
#Notes: These have been exported from geneious, aligned using MAFFT[KR], exported as both .fasta and as .csv for relevant columns.
#Note: For .fasta files, U has been converted to T, and then "KT8" to "KU8" to conserve naming.
#KT15 ->KU15
#KT6 -> KU6
#Notes on translating ref seq names to organism names:  gsub("NC_002815", "Cactus virus X_AF308158"; "NC_006059", "Zygocactus virus X_AY366208"; "NC_011659", "Schlumbergera virus X_AY366207";"NC_024458", "Pitaya virus X_JF930327"
#Note: hosts have been added to organisms that lacked them.
cvx.init.aln.fasta <- getURL(aln.fasta.loc)
cvx.seq.metadata.csv <-getURL(metadata.loc)
write(x=cvx.seq.metadata.csv, file='cvx.seq.metadata.csv')
cvx.metadata <- read.csv('cvx.seq.metadata.csv', stringsAsFactors = FALSE)
#alphabetize metadata, only needs to be done once:
#cvx.metadata <- cvx.metadata[order(cvx.metadata$Name),]
#write.csv(cvx.metadata, file="test.csv")
#cvx.metadata <- read.csv('test.csv', stringsAsFactors = FALSE)
write(x=cvx.seq.metadata.csv, file='cvx.seq.metadata.csv')
write(cvx.init.aln.fasta, file = 'cvx.init.aln.fasta')
cacti.aln <- read.dna(file = 'cvx.init.aln.fasta', format= "fasta")
cvx.aln.phy <- read.phyDat('cvx.init.aln.fasta', format='fasta', type='DNA')
cvx.aln.bin <- as.DNAbin(cvx.aln.phy)
cvx.nj <- NJ(dist.dna(cvx.aln.bin))
#cacti.nj <- root(cacti.nj, outgroup=c(7), resolve.root=T)
is.rooted(cvx.nj)
write.tree(cvx.nj, file="cvx.njtree.nwk")
nj.gg <- read.tree(file="cvx.njtree.nwk")
nj.gg <- midpoint.root(nj.gg)
#create vector for host information
hostinfo <- data.frame(nj.gg$tip.label)
#rename tree tips and populate vector
tip.rename.org = function(tree,dataframe){
for(i in 1:length(tree$tip.label)){
hostinfo$nj.gg.tip.label[i] <<- dataframe$host[grep(tree$tip.label[i],dataframe$Name)]
tree$tip.label[i]<-dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)]
}
tree
}
nj.gg <- read.tree(file="cvx.njtree.nwk")
nj.gg <- midpoint.root(nj.gg)
nj.gg <- tip.rename.org(nj.gg,cvx.metadata)
unlink("cvx.init.aln.fasta")
unlink("cvx.seq.metadata.csv")
unlink("cvx.njtree.nwk")
metadata.loc <- 'https://raw.githubusercontent.com/pseudocrater/cactusvirusx/master/data/cvx_hostdata_v3.csv'
aln.fasta.loc <- 'https://raw.githubusercontent.com/pseudocrater/cactusvirusx/master/data/genbank_KR_viruses_consensus_aln.fasta'
#Notes: These have been exported from geneious, aligned using MAFFT[KR], exported as both .fasta and as .csv for relevant columns.
#Note: For .fasta files, U has been converted to T, and then "KT8" to "KU8" to conserve naming.
#KT15 ->KU15
#KT6 -> KU6
#Notes on translating ref seq names to organism names:  gsub("NC_002815", "Cactus virus X_AF308158"; "NC_006059", "Zygocactus virus X_AY366208"; "NC_011659", "Schlumbergera virus X_AY366207";"NC_024458", "Pitaya virus X_JF930327"
#Note: hosts have been added to organisms that lacked them.
cvx.init.aln.fasta <- getURL(aln.fasta.loc)
cvx.seq.metadata.csv <-getURL(metadata.loc)
write(x=cvx.seq.metadata.csv, file='cvx.seq.metadata.csv')
cvx.metadata <- read.csv('cvx.seq.metadata.csv', stringsAsFactors = FALSE)
#alphabetize metadata, only needs to be done once:
#cvx.metadata <- cvx.metadata[order(cvx.metadata$Name),]
#write.csv(cvx.metadata, file="test.csv")
#cvx.metadata <- read.csv('test.csv', stringsAsFactors = FALSE)
write(x=cvx.seq.metadata.csv, file='cvx.seq.metadata.csv')
write(cvx.init.aln.fasta, file = 'cvx.init.aln.fasta')
cacti.aln <- read.dna(file = 'cvx.init.aln.fasta', format= "fasta")
cvx.aln.phy <- read.phyDat('cvx.init.aln.fasta', format='fasta', type='DNA')
cvx.aln.bin <- as.DNAbin(cvx.aln.phy)
cvx.nj <- NJ(dist.dna(cvx.aln.bin))
#cacti.nj <- root(cacti.nj, outgroup=c(7), resolve.root=T)
is.rooted(cvx.nj)
write.tree(cvx.nj, file="cvx.njtree.nwk")
nj.gg <- read.tree(file="cvx.njtree.nwk")
nj.gg <- midpoint.root(nj.gg)
#create vector for host information
hostinfo <- data.frame(nj.gg$tip.label)
#rename tree tips and populate vector
tip.rename.org = function(tree,dataframe){
for(i in 1:length(tree$tip.label)){
hostinfo$nj.gg.tip.label[i] <<- dataframe$host[grep(tree$tip.label[i],dataframe$Name)]
tree$tip.label[i]<-dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)]
}
tree
}
nj.gg <- read.tree(file="cvx.njtree.nwk")
nj.gg <- midpoint.root(nj.gg)
nj.gg <- tip.rename.org(nj.gg,cvx.metadata)
#create vector for host information
hostinfo <- data.frame(nj.gg$tip.label)
#rename tree tips and populate vector
tip.rename.org = function(tree,dataframe){
for(i in 1:length(tree$tip.label)){
hostinfo$nj.gg.tip.label[i] <<- dataframe$host[grep(tree$tip.label[i],dataframe$Name)]
tree$tip.label[i]<-dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)]
print(dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)])
}
tree
}
nj.gg <- read.tree(file="cvx.njtree.nwk")
nj.gg <- midpoint.root(nj.gg)
nj.gg <- tip.rename.org(nj.gg,cvx.metadata)
#create vector for host information
hostinfo <- data.frame(nj.gg$tip.label)
#rename tree tips and populate vector
tip.rename.org = function(tree,dataframe){
for(i in 1:length(tree$tip.label)){
hostinfo$nj.gg.tip.label[i] <<- dataframe$host[grep(tree$tip.label[i],dataframe$Name)]
tree$tip.label[i]<-dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)]
print(tree$tip.label[i])
}
tree
}
nj.gg <- read.tree(file="cvx.njtree.nwk")
nj.gg <- midpoint.root(nj.gg)
nj.gg <- tip.rename.org(nj.gg,cvx.metadata)
nj.gg$tip.label[1]
hostinfo
plot(nj.gg)
nj.gg$tip.label
unlink("cvx.init.aln.fasta")
unlink("cvx.seq.metadata.csv")
unlink("cvx.njtree.nwk")
metadata.loc <- 'https://raw.githubusercontent.com/pseudocrater/cactusvirusx/master/data/cvx_hostdata_v3.csv'
aln.fasta.loc <- 'https://raw.githubusercontent.com/pseudocrater/cactusvirusx/master/data/genbank_KR_viruses_consensus_aln.fasta'
#Notes: These have been exported from geneious, aligned using MAFFT[KR], exported as both .fasta and as .csv for relevant columns.
#Note: For .fasta files, U has been converted to T, and then "KT8" to "KU8" to conserve naming.
#KT15 ->KU15
#KT6 -> KU6
#Notes on translating ref seq names to organism names:  gsub("NC_002815", "Cactus virus X_AF308158"; "NC_006059", "Zygocactus virus X_AY366208"; "NC_011659", "Schlumbergera virus X_AY366207";"NC_024458", "Pitaya virus X_JF930327"
#Note: hosts have been added to organisms that lacked them.
cvx.init.aln.fasta <- getURL(aln.fasta.loc)
cvx.seq.metadata.csv <-getURL(metadata.loc)
write(x=cvx.seq.metadata.csv, file='cvx.seq.metadata.csv')
cvx.metadata <- read.csv('cvx.seq.metadata.csv', stringsAsFactors = FALSE)
#alphabetize metadata, only needs to be done once:
#cvx.metadata <- cvx.metadata[order(cvx.metadata$Name),]
#write.csv(cvx.metadata, file="test.csv")
#cvx.metadata <- read.csv('test.csv', stringsAsFactors = FALSE)
write(x=cvx.seq.metadata.csv, file='cvx.seq.metadata.csv')
write(cvx.init.aln.fasta, file = 'cvx.init.aln.fasta')
cacti.aln <- read.dna(file = 'cvx.init.aln.fasta', format= "fasta")
cvx.aln.phy <- read.phyDat('cvx.init.aln.fasta', format='fasta', type='DNA')
cvx.aln.bin <- as.DNAbin(cvx.aln.phy)
cvx.nj <- NJ(dist.dna(cvx.aln.bin))
write.tree(cvx.nj, file="cvx.njtree.nwk")
nj.gg <- read.tree(file="cvx.njtree.nwk")
nj.gg <- midpoint.root(nj.gg)
#create vector for host information
hostinfo <- data.frame(nj.gg$tip.label)
#rename tree tips and populate vector
tip.rename.org = function(tree,dataframe){
for(i in 1:length(tree$tip.label)){
hostinfo$nj.gg.tip.label[i] <<- dataframe$host[grep(tree$tip.label[i],dataframe$Name)]
tree$tip.label[i]<-dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)]
print(tree$tip.label[i])
}
tree
}
nj.gg <- read.tree(file="cvx.njtree.nwk")
nj.gg <- midpoint.root(nj.gg)
nj.gg <- tip.rename.org(nj.gg,cvx.metadata)
nj.gg$tip.label
hostinfo[1]
hostinfo$nj.gg.tip.label[1]
hostinfo$nj.gg.tip.label[1:15]
#create vector for host information
hostinfo <- data.frame(nj.gg$tip.label)
#rename tree tips and populate vector
tip.rename.org = function(tree,dataframe){
for(i in 1:length(tree$tip.label)){
hostinfo$nj.gg.tip.label[i] <<- dataframe$host[grep(tree$tip.label[i],dataframe$Name)]
tree$tip.label[i]<-dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)]
print(i)
print(tree$tip.label[i])
print(dataframe$Name)
}
tree
}
nj.gg <- read.tree(file="cvx.njtree.nwk")
nj.gg <- midpoint.root(nj.gg)
nj.gg <- tip.rename.org(nj.gg,cvx.metadata)
#create vector for host information
hostinfo <- data.frame(nj.gg$tip.label)
#rename tree tips and populate vector
tip.rename.org = function(tree,dataframe){
for(i in 1:length(tree$tip.label)){
hostinfo$nj.gg.tip.label[i] <<- dataframe$host[grep(tree$tip.label[i],dataframe$Name)]
tree$tip.label[i]<-dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)]
print(i)
print(tree$tip.label[i])
print(dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)])
}
tree
}
nj.gg <- read.tree(file="cvx.njtree.nwk")
nj.gg <- midpoint.root(nj.gg)
nj.gg <- tip.rename.org(nj.gg,cvx.metadata)
#create vector for host information
hostinfo <- data.frame(nj.gg$tip.label)
#rename tree tips and populate vector
tip.rename.org = function(tree,dataframe){
for(i in 1:length(tree$tip.label)){
hostinfo$nj.gg.tip.label[i] <<- dataframe$host[grep(tree$tip.label[i],dataframe$Name)]
print(i)
print(tree$tip.label[i])
print(dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)])
tree$tip.label[i]<-dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)]
}
tree
}
nj.gg <- read.tree(file="cvx.njtree.nwk")
nj.gg <- midpoint.root(nj.gg)
nj.gg <- tip.rename.org(nj.gg,cvx.metadata)
nj.gg$tip.label[19]
nj.gg$tip.label[20]
unlink("cvx.init.aln.fasta")
unlink("cvx.seq.metadata.csv")
unlink("cvx.njtree.nwk")
metadata.loc <- 'https://raw.githubusercontent.com/pseudocrater/cactusvirusx/master/data/cvx_hostdata_v3.csv'
aln.fasta.loc <- 'https://raw.githubusercontent.com/pseudocrater/cactusvirusx/master/data/genbank_KR_viruses_consensus_aln.fasta'
#Notes: These have been exported from geneious, aligned using MAFFT[KR], exported as both .fasta and as .csv for relevant columns.
#Note: For .fasta files, U has been converted to T, and then "KT8" to "KU8" to conserve naming.
#KT15 ->KU15
#KT6 -> KU6
#Notes on translating ref seq names to organism names:  gsub("NC_002815", "Cactus virus X_AF308158"; "NC_006059", "Zygocactus virus X_AY366208"; "NC_011659", "Schlumbergera virus X_AY366207";"NC_024458", "Pitaya virus X_JF930327"
#Note: hosts have been added to organisms that lacked them.
metadata.loc <- 'https://raw.githubusercontent.com/pseudocrater/cactusvirusx/master/data/cvx_hostdata_v3.csv'
aln.fasta.loc <- 'https://raw.githubusercontent.com/pseudocrater/cactusvirusx/master/data/genbank_KR_viruses_consensus_aln.fasta'
#Notes: These have been exported from geneious, aligned using MAFFT[KR], exported as both .fasta and as .csv for relevant columns.
#Note: For .fasta files, U has been converted to T, and then "KT8" to "KU8" to conserve naming.
#KT15 ->KU15
#KT6 -> KU6
#Notes on translating ref seq names to organism names:  gsub("NC_002815", "Cactus virus X_AF308158"; "NC_006059", "Zygocactus virus X_AY366208"; "NC_011659", "Schlumbergera virus X_AY366207";"NC_024458", "Pitaya virus X_JF930327"
#Note: hosts have been added to organisms that lacked them.
cvx.metadata <- read.csv('cvx.seq.metadata.csv', stringsAsFactors = FALSE)
cvx.init.aln.fasta <- getURL(aln.fasta.loc)
cvx.seq.metadata.csv <-getURL(metadata.loc)
write(x=cvx.seq.metadata.csv, file='cvx.seq.metadata.csv')
cvx.metadata <- read.csv('cvx.seq.metadata.csv', stringsAsFactors = FALSE)
#alphabetize metadata, only needs to be done once:
#cvx.metadata <- cvx.metadata[order(cvx.metadata$Name),]
#write.csv(cvx.metadata, file="test.csv")
#cvx.metadata <- read.csv('test.csv', stringsAsFactors = FALSE)
write(x=cvx.seq.metadata.csv, file='cvx.seq.metadata.csv')
write(cvx.init.aln.fasta, file = 'cvx.init.aln.fasta')
cacti.aln <- read.dna(file = 'cvx.init.aln.fasta', format= "fasta")
cvx.aln.phy <- read.phyDat('cvx.init.aln.fasta', format='fasta', type='DNA')
cvx.aln.bin <- as.DNAbin(cvx.aln.phy)
cvx.nj <- NJ(dist.dna(cvx.aln.bin))
write.tree(cvx.nj, file="cvx.njtree.nwk")
nj.gg <- read.tree(file="cvx.njtree.nwk")
nj.gg <- midpoint.root(nj.gg)
#create vector for host information
hostinfo <- data.frame(nj.gg$tip.label)
#rename tree tips and populate vector
tip.rename.org = function(tree,dataframe){
for(i in 1:length(tree$tip.label)){
hostinfo$nj.gg.tip.label[i] <<- dataframe$host[grep(tree$tip.label[i],dataframe$Name)]
print(i)
print(tree$tip.label[i])
print(dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)])
tree$tip.label[i]<-dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)]
}
tree
}
nj.gg <- read.tree(file="cvx.njtree.nwk")
nj.gg <- midpoint.root(nj.gg)
nj.gg <- tip.rename.org(nj.gg,cvx.metadata)
#find internal node numbers:
MRCA(nj.gg, 7, 9)
par( mar=c(1, 1, 0, 0))
ggtree(nj.gg, ladderize=T, aes(), show.legend = TRUE, size=0.2)  %<+% hostinfo+
#name tip labels:
geom_tiplab(aes(label=nj.gg$tip.label[1:211]), hjust=0, offset=0, align=T, linetype = "dotted")+
#host tip labels:
geom_tiplab(aes(label=hostinfo$nj.gg.tip.label[1:211]), align = T, linetype = 'blank', na.rm=TRUE, offset=0.15) +
#scale
geom_treescale(x=0, y=60, offset=2, fontsize = 3)+
#node labels:
geom_text(aes(label=node), hjust=0.2) +
#geom_hilight(node=136, fill="steelblue", alpha=.6, extend=0.5)+
xlim(0,0.6)
length(nj.gg$tip.label)
nj.gg$Nnode
73+72
par( mar=c(1, 1, 0, 0))
L <- nj.gg$Nnode + length(nj.gg$tip.label)
ggtree(nj.gg, ladderize=T, aes(), show.legend = TRUE, size=0.2)  %<+% hostinfo+
#name tip labels:
geom_tiplab(aes(label=nj.gg$tip.label[1:L]), hjust=0, offset=0, align=T, linetype = "dotted")+
#host tip labels:
geom_tiplab(aes(label=hostinfo$nj.gg.tip.label[1:L]), align = T, linetype = 'blank', na.rm=TRUE, offset=0.15) +
#scale
geom_treescale(x=0, y=60, offset=2, fontsize = 3)+
#node labels:
geom_text(aes(label=node), hjust=0.2) +
#geom_hilight(node=136, fill="steelblue", alpha=.6, extend=0.5)+
xlim(0,0.6)
filename = paste(gsub(":", "-", Sys.time()),"_names_hosts_nj.pdf",sep="")
ggsave(filename, width = 60, height = 40, units = "cm", limitsize = FALSE)
