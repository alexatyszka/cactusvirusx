par( mar=c(1, 1, 0, 0))
L <- nj.gg$Nnode + length(nj.gg$tip.label)
ggtree(nj.gg, ladderize=T, aes(), show.legend = TRUE, size=0.2)  %<+% hostinfo+
#name tip labels:
geom_tiplab(aes(label=nj.gg$tip.label[1:L]), hjust=0, offset=0, align=T, linetype = "dotted")+
#host tip labels:
geom_tiplab(aes(label=hostinfo$nj.gg.tip.label[1:L]), align = T, linetype = 'blank', na.rm=TRUE, offset=0.5) +
#scale
geom_treescale(x=0, y=60, fontsize = 3) +
#node labels:
geom_text2(aes(subset = !isTip, label=label, hjust=-0.5)) +
#geom_hilight(node=136, fill="steelblue", alpha=.6, extend=0.5)+
xlim(0,3.5)
reroot(nj.gg, node.number = 114)
par( mar=c(1, 1, 0, 0))
L <- nj.gg$Nnode + length(nj.gg$tip.label)
ggtree(nj.gg, ladderize=T, aes(), show.legend = TRUE, size=0.2)  %<+% hostinfo+
#name tip labels:
geom_tiplab(aes(label=nj.gg$tip.label[1:L]), hjust=0, offset=0, align=T, linetype = "dotted")+
#host tip labels:
geom_tiplab(aes(label=hostinfo$nj.gg.tip.label[1:L]), align = T, linetype = 'blank', na.rm=TRUE, offset=0.5) +
#scale
geom_treescale(x=0, y=60, fontsize = 3) +
#node labels:
geom_text2(aes(subset = !isTip, label=label, hjust=-0.5)) +
#geom_hilight(node=136, fill="steelblue", alpha=.6, extend=0.5)+
xlim(0,3.5)
par( mar=c(1, 1, 0, 0))
L <- nj.gg$Nnode + length(nj.gg$tip.label)
ggtree(nj.gg, ladderize=T, aes(), show.legend = TRUE, size=0.2)  %<+% hostinfo+
#name tip labels:
geom_tiplab(aes(label=nj.gg$tip.label[1:L]), hjust=0, offset=0, align=T, linetype = "dotted")+
#host tip labels:
geom_tiplab(aes(label=hostinfo$nj.gg.tip.label[1:L]), align = T, linetype = 'blank', na.rm=TRUE, offset=0.5) +
#scale
geom_treescale(x=0, y=60, fontsize = 3) +
#node labels:
geom_text2(aes(subset = !isTip, label=node, hjust=-0.5)) +
#geom_hilight(node=136, fill="steelblue", alpha=.6, extend=0.5)+
xlim(0,3.5)
nj.gg <- reroot(nj.gg, node.number = 114)
par( mar=c(1, 1, 0, 0))
L <- nj.gg$Nnode + length(nj.gg$tip.label)
ggtree(nj.gg, ladderize=T, aes(), show.legend = TRUE, size=0.2)  %<+% hostinfo+
#name tip labels:
geom_tiplab(aes(label=nj.gg$tip.label[1:L]), hjust=0, offset=0, align=T, linetype = "dotted")+
#host tip labels:
geom_tiplab(aes(label=hostinfo$nj.gg.tip.label[1:L]), align = T, linetype = 'blank', na.rm=TRUE, offset=0.5) +
#scale
geom_treescale(x=0, y=60, fontsize = 3) +
#node labels:
geom_text2(aes(subset = !isTip, label=node, hjust=-0.5)) +
#geom_hilight(node=136, fill="steelblue", alpha=.6, extend=0.5)+
xlim(0,3.5)
par( mar=c(1, 1, 0, 0))
L <- nj.gg$Nnode + length(nj.gg$tip.label)
ggtree(nj.gg, ladderize=T, aes(), show.legend = TRUE, size=0.2)  %<+% hostinfo+
#name tip labels:
geom_tiplab(aes(label=nj.gg$tip.label[1:L]), hjust=0, offset=0, align=T, linetype = "dotted")+
#host tip labels:
geom_tiplab(aes(label=hostinfo$nj.gg.tip.label[1:L]), align = T, linetype = 'blank', na.rm=TRUE, offset=0.5) +
#scale
geom_treescale(x=0, y=60, fontsize = 3) +
#node labels:
geom_text2(aes(subset = !isTip, label=label, hjust=-0.5)) +
#geom_hilight(node=136, fill="steelblue", alpha=.6, extend=0.5)+
xlim(0,3.5)
filename = paste(gsub(":", "-", Sys.time()),"_bootstrap_tree.pdf",sep="")
ggsave(filename, width = 60, height = 40, units = "cm", limitsize = FALSE)
par( mar=c(1, 1, 0, 0))
L <- nj.gg$Nnode + length(nj.gg$tip.label)
ggtree(nj.gg, ladderize=T, aes(), show.legend = TRUE, size=0.2)  %<+% hostinfo+
#name tip labels:
geom_tiplab(aes(label=nj.gg$tip.label[1:L]), hjust=0, offset=0, align=T, linetype = "dotted")+
#host tip labels:
geom_tiplab(aes(label=hostinfo$nj.gg.tip.label[1:L]), align = T, linetype = 'blank', na.rm=TRUE, offset=0.5) +
#scale
geom_treescale(x=0, y=60, fontsize = 3) +
#node labels:
geom_text2(aes(subset = !isTip, label=label, hjust=-0.5)) +
#geom_hilight(node=136, fill="steelblue", alpha=.6, extend=0.5)+
xlim(0,2)
filename = paste(gsub(":", "-", Sys.time()),"_bootstrap_tree.pdf",sep="")
ggsave(filename, width = 60, height = 40, units = "cm", limitsize = FALSE)
par( mar=c(1, 1, 0, 0))
L <- nj.gg$Nnode + length(nj.gg$tip.label)
ggtree(nj.gg, ladderize=T, aes(), show.legend = TRUE, size=0.2)  %<+% hostinfo+
#name tip labels:
geom_tiplab(aes(label=nj.gg$tip.label[1:L]), hjust=0, offset=0, align=T, linetype = "dotted")+
#host tip labels:
geom_tiplab(aes(label=hostinfo$nj.gg.tip.label[1:L]), align = T, linetype = 'blank', na.rm=TRUE, offset=0.15) +
#scale
geom_treescale(x=0, y=60, fontsize = 3) +
#node labels:
geom_text2(aes(subset = !isTip, label=label, hjust=-0.5)) +
#geom_hilight(node=136, fill="steelblue", alpha=.6, extend=0.5)+
xlim(0,2)
filename = paste(gsub(":", "-", Sys.time()),"_bootstrap_tree.pdf",sep="")
ggsave(filename, width = 60, height = 40, units = "cm", limitsize = FALSE)
par( mar=c(1, 1, 0, 0))
L <- nj.gg$Nnode + length(nj.gg$tip.label)
ggtree(nj.gg, ladderize=T, aes(), show.legend = TRUE, size=0.2)  %<+% hostinfo+
#name tip labels:
geom_tiplab(aes(label=nj.gg$tip.label[1:L]), hjust=0, offset=0, align=T, linetype = "dotted")+
#host tip labels:
geom_tiplab(aes(label=hostinfo$nj.gg.tip.label[1:L]), align = T, linetype = 'blank', na.rm=TRUE, offset=0.3) +
#scale
geom_treescale(x=0, y=60, fontsize = 3) +
#node labels:
geom_text2(aes(subset = !isTip, label=label, hjust=-0.5)) +
#geom_hilight(node=136, fill="steelblue", alpha=.6, extend=0.5)+
xlim(0,2)
filename = paste(gsub(":", "-", Sys.time()),"_bootstrap_tree.pdf",sep="")
ggsave(filename, width = 60, height = 40, units = "cm", limitsize = FALSE)
#create vector for host information
nj.gg <- reroot(cvx.newick.tree, node.number = 114)
#create vector for host information
nj.gg <- reroot(cvx.newick.tree, node.number = 114)
hostinfo <- c()
hostinfo <- data.frame(nj.gg$tip.label)
#rename tree tips and populate vector
tip.rename.org = function(tree,dataframe){
for(i in 1:length(tree$tip.label)){
hostinfo$nj.gg.tip.label[i] <<- dataframe$host[grep(tree$tip.label[i],dataframe$Name)]
#uncomment these for troubleshooting:
print(i)
print(tree$tip.label[i])
print(dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)])
tree$tip.label[i]<-dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)]
}
tree
}
#find internal node numbers based on tip numbers:
#MRCA(nj.gg, 7, 9)
nj.gg <- tip.rename.org(nj.gg,cvx.metadata)
nj.gg <- midpoint.root(nj.gg)
#create vector for host information
nj.gg <- reroot(cvx.newick.tree, node.number = 114)
hostinfo <- c()
hostinfo <- data.frame(nj.gg$tip.label)
#rename tree tips and populate vector
tip.rename.org = function(tree,dataframe){
for(i in 1:length(tree$tip.label)){
hostinfo$nj.gg.tip.label[i] <<- dataframe$host[grep(tree$tip.label[i],dataframe$Name)]
#uncomment these for troubleshooting:
print(i)
print(tree$tip.label[i])
print(dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)])
tree$tip.label[i]<-dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)]
}
tree
}
#find internal node numbers based on tip numbers:
#MRCA(nj.gg, 7, 9)
nj.gg <- tip.rename.org(nj.gg,cvx.metadata)
par( mar=c(1, 1, 0, 0))
L <- nj.gg$Nnode + length(nj.gg$tip.label)
ggtree(nj.gg, ladderize=T, aes(), show.legend = TRUE, size=0.2)  %<+% hostinfo+
#name tip labels:
geom_tiplab(aes(label=nj.gg$tip.label[1:L]), hjust=0, offset=0, align=T, linetype = "dotted")+
#host tip labels:
geom_tiplab(aes(label=hostinfo$nj.gg.tip.label[1:L]), align = T, linetype = 'blank', na.rm=TRUE, offset=0.3) +
#scale
geom_treescale(x=0, y=60, fontsize = 3) +
#node labels:
geom_text2(aes(subset = !isTip, label=label, hjust=-0.5)) +
#geom_hilight(node=136, fill="steelblue", alpha=.6, extend=0.5)+
xlim(0,2)
filename = paste(gsub(":", "-", Sys.time()),"_bootstrap_tree.pdf",sep="")
ggsave(filename, width = 60, height = 40, units = "cm", limitsize = FALSE)
plot(nj.gg,cex=0.25)
tips.store <- identify(nj.gg, nodes = TRUE, tips = TRUE,labels = FALSE, quiet = FALSE)$tips
library(DECIPHER)
cvx.metadata <- read.csv('../data/cvx_hostdata_v3.csv', stringsAsFactors = FALSE)
tre.f  <- "../data/iqtree-output/genbank_kr_consensus_extraction_al_trimmed.fasta.newick"
cvx.newick.tree <- read.newick(tre.f)
library(ggtree) # tree plotting
library(DECIPHER)
library(RCurl) # web page loading
library(phangorn)
library(phytools)
library(ape)
library("knitr")
library(DECIPHER)
library(treeio)
cvx.metadata <- read.csv('../data/cvx_hostdata_v3.csv', stringsAsFactors = FALSE)
tre.f  <- "../data/iqtree-output/genbank_kr_consensus_extraction_al_trimmed.fasta.newick"
cvx.newick.tree <- read.newick(tre.f)
#create vector for host information
nj.gg <- reroot(cvx.newick.tree, node.number = 114)
hostinfo <- c()
hostinfo <- data.frame(nj.gg$tip.label)
#rename tree tips and populate vector
tip.rename.org = function(tree,dataframe){
for(i in 1:length(tree$tip.label)){
hostinfo$nj.gg.tip.label[i] <<- dataframe$host[grep(tree$tip.label[i],dataframe$Name)]
#uncomment these for troubleshooting:
#print(i)
#print(tree$tip.label[i])
#print(dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)])
tree$tip.label[i]<-dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)]
}
tree
}
nj.gg <- tip.rename.org(nj.gg,cvx.metadata)
plot(nj.gg,cex=0.25)
tips.store <- identify(nj.gg, nodes = TRUE, tips = TRUE,labels = FALSE, quiet = FALSE)$tips
for (i in 1:length(tips.store)){
tips.store[i] <- nj.gg$tip.label[tips.store[i]]
}
tips.store
tips.store[i] <- nj.gg$tip.label[tips.store[i]]
plot(nj.gg,cex=0.25)
tips.store <- identify(nj.gg, nodes = TRUE, tips = TRUE,labels = FALSE, quiet = FALSE)$tips
tips.store
t <- tips.store
for (i in 1:length(tips.store)){
print(tips.store[i])
tips.store[i] <- nj.gg$tip.label[tips.store[i]]
}
tips.store
tips.store <-t
for (i in 1:length(tips.store)){
print(tips.store[i])
print(nj.gg$tip.label[tips.store[i]])
tips.store[i] <- nj.gg$tip.label[tips.store[i]]
}
nj.gg$tip.label[1]
nj.gg$tip.label[2]
tips.store[1]
tips.store <- t
tips.store
tips.store[1]
tips.store[2]
tips.cross <- c()
for (i in 1:length(tips.store)){
print(tips.store[i])
print(nj.gg$tip.label[tips.store[i]])
tips.cross[i] <- nj.gg$tip.label[tips.store[i]]
}
cross.data <- expand.grid(tip1 = tips.cross, tip2 = tips.cross)
d<- c()
get.tree.dist = function(solcross.data,pathd8.tre)
{
for(i in 1:length(solcross.data$tip1))
{
ifelse(is.na(match(solcross.data$tip1[i],pathd8.tre$tip.label)) | is.na(match(solcross.data$tip2[i],pathd8.tre$tip.label)),d[i]<-NA,
d[i]<-cophenetic.phylo(pathd8.tre)[solcross.data$tip1[i],solcross.data$tip2[i]])
}
return(d)
}
test <- get.tree.dist(cross.data,nj.gg)
test
pairwise.dist <- get.tree.dist(cross.data,nj.gg)
max(test)
mean(test[test!=0])
max(test)
max(pairwise.dist[pairwise.dist!=0])
pairwise.dist <- get.tree.dist(cross.data,nj.gg)
max(pairwise.dist[pairwise.dist!=0])
plot(nj.gg,cex=0.25)
tips.store <- identify(nj.gg, nodes = TRUE, tips = TRUE,labels = FALSE, quiet = FALSE)$tips
tips.store
plot(nj.gg,cex=0.25)
tips.store <- identify(nj.gg, nodes = TRUE, tips = TRUE,labels = FALSE, quiet = FALSE)$tips
tips.store
for (i in 1:length(tips.store)){
tips.cross[i] <- nj.gg$tip.label[tips.store[i]]
}
cross.data <- expand.grid(tip1 = tips.cross, tip2 = tips.cross)
d<- c()
get.tree.dist = function(solcross.data,pathd8.tre)
{
for(i in 1:length(solcross.data$tip1))
{
ifelse(is.na(match(solcross.data$tip1[i],pathd8.tre$tip.label)) | is.na(match(solcross.data$tip2[i],pathd8.tre$tip.label)),d[i]<-NA,
d[i]<-cophenetic.phylo(pathd8.tre)[solcross.data$tip1[i],solcross.data$tip2[i]])
}
return(d)
}
pairwise.dist <- get.tree.dist(cross.data,nj.gg)
max(pairwise.dist[pairwise.dist!=0])
mean(pairwise.dist[pairwise.dist!=0])
pairwise.dist
tips.cross <- c()
for (i in 1:length(tips.store)){
tips.cross[i] <- nj.gg$tip.label[tips.store[i]]
}
tips.cross
cross.data <- expand.grid(tip1 = tips.cross, tip2 = tips.cross)
d<- c()
get.tree.dist = function(solcross.data,pathd8.tre)
{
for(i in 1:length(solcross.data$tip1))
{
ifelse(is.na(match(solcross.data$tip1[i],pathd8.tre$tip.label)) | is.na(match(solcross.data$tip2[i],pathd8.tre$tip.label)),d[i]<-NA,
d[i]<-cophenetic.phylo(pathd8.tre)[solcross.data$tip1[i],solcross.data$tip2[i]])
}
return(d)
}
cross.data
pairwise.dist <- get.tree.dist(cross.data,nj.gg)
max(pairwise.dist[pairwise.dist!=0])
plot(nj.gg,cex=0.25)
tips.store <- identify(nj.gg, nodes = TRUE, tips = TRUE,labels = FALSE, quiet = FALSE)$tips
tips.store
tips.cross <- c()
for (i in 1:length(tips.store)){
tips.cross[i] <- nj.gg$tip.label[tips.store[i]]
}
cross.data <- expand.grid(tip1 = tips.cross, tip2 = tips.cross)
d<- c()
get.tree.dist = function(solcross.data,pathd8.tre)
{
for(i in 1:length(solcross.data$tip1))
{
ifelse(is.na(match(solcross.data$tip1[i],pathd8.tre$tip.label)) | is.na(match(solcross.data$tip2[i],pathd8.tre$tip.label)),d[i]<-NA,
d[i]<-cophenetic.phylo(pathd8.tre)[solcross.data$tip1[i],solcross.data$tip2[i]])
}
return(d)
}
d<- c()
get.tree.dist = function(solcross.data,pathd8.tre)
{
for(i in 1:length(solcross.data$tip1))
{
ifelse(is.na(match(solcross.data$tip1[i],pathd8.tre$tip.label)) | is.na(match(solcross.data$tip2[i],pathd8.tre$tip.label)),d[i]<-NA,
d[i]<-cophenetic.phylo(pathd8.tre)[solcross.data$tip1[i],solcross.data$tip2[i]])
}
return(d)
}
pairwise.dist <- get.tree.dist(cross.data,nj.gg)
max(pairwise.dist[pairwise.dist!=0])
plot(nj.gg,cex=0.25)
tips.store <- identify(nj.gg, nodes = TRUE, tips = TRUE,labels = FALSE, quiet = FALSE)$tips
tips.cross <- c()
for (i in 1:length(tips.store)){
tips.cross[i] <- nj.gg$tip.label[tips.store[i]]
}
cross.data <- expand.grid(tip1 = tips.cross, tip2 = tips.cross)
tips.store
d<- c()
get.tree.dist = function(solcross.data,pathd8.tre)
{
for(i in 1:length(solcross.data$tip1))
{
ifelse(is.na(match(solcross.data$tip1[i],pathd8.tre$tip.label)) | is.na(match(solcross.data$tip2[i],pathd8.tre$tip.label)),d[i]<-NA,
d[i]<-cophenetic.phylo(pathd8.tre)[solcross.data$tip1[i],solcross.data$tip2[i]])
}
return(d)
}
pairwise.dist <- get.tree.dist(cross.data,nj.gg)
max(pairwise.dist[pairwise.dist!=0])
plot(nj.gg,cex=0.25)
tips.store <- identify(nj.gg, nodes = TRUE, tips = TRUE,labels = FALSE, quiet = FALSE)$tips
tips.cross <- c()
for (i in 1:length(tips.store)){
tips.cross[i] <- nj.gg$tip.label[tips.store[i]]
}
cross.data <- expand.grid(tip1 = tips.cross, tip2 = tips.cross)
d<- c()
get.tree.dist = function(solcross.data,pathd8.tre)
{
for(i in 1:length(solcross.data$tip1))
{
ifelse(is.na(match(solcross.data$tip1[i],pathd8.tre$tip.label)) | is.na(match(solcross.data$tip2[i],pathd8.tre$tip.label)),d[i]<-NA,
d[i]<-cophenetic.phylo(pathd8.tre)[solcross.data$tip1[i],solcross.data$tip2[i]])
}
return(d)
}
pairwise.dist <- get.tree.dist(cross.data,nj.gg)
max(pairwise.dist[pairwise.dist!=0])
plot(nj.gg,cex=0.25)
tips.store <- identify(nj.gg, nodes = TRUE, tips = TRUE,labels = FALSE, quiet = FALSE)$tips
plot.new()
plot(nj.gg,cex=0.25)
tips.store <- identify(nj.gg, nodes = TRUE, tips = TRUE,labels = FALSE, quiet = FALSE)$tips
tips.cross <- c()
for (i in 1:length(tips.store)){
tips.cross[i] <- nj.gg$tip.label[tips.store[i]]
}
cross.data <- expand.grid(tip1 = tips.cross, tip2 = tips.cross)
d<- c()
get.tree.dist = function(solcross.data,pathd8.tre)
{
for(i in 1:length(solcross.data$tip1))
{
ifelse(is.na(match(solcross.data$tip1[i],pathd8.tre$tip.label)) | is.na(match(solcross.data$tip2[i],pathd8.tre$tip.label)),d[i]<-NA,
d[i]<-cophenetic.phylo(pathd8.tre)[solcross.data$tip1[i],solcross.data$tip2[i]])
}
return(d)
}
pairwise.dist <- get.tree.dist(cross.data,nj.gg)
max(pairwise.dist[pairwise.dist!=0])
plot.new()
plot(nj.gg,cex=0.25)
tips.store <- identify(nj.gg, nodes = TRUE, tips = TRUE,labels = FALSE, quiet = FALSE)$tips
tips.cross <- c()
for (i in 1:length(tips.store)){
tips.cross[i] <- nj.gg$tip.label[tips.store[i]]
}
cross.data <- expand.grid(tip1 = tips.cross, tip2 = tips.cross)
plot(nj.gg,cex=0.25)
tips.store <- identify(nj.gg, nodes = TRUE, tips = TRUE,labels = FALSE, quiet = FALSE)$tips
plot(nj.gg,cex=0.25)
tips.store <- identify(nj.gg, nodes = TRUE, tips = TRUE,labels = FALSE, quiet = FALSE)$tips
tips.cross <- c()
for (i in 1:length(tips.store)){
tips.cross[i] <- nj.gg$tip.label[tips.store[i]]
}
cross.data <- expand.grid(tip1 = tips.cross, tip2 = tips.cross)
d<- c()
get.tree.dist = function(solcross.data,pathd8.tre)
{
for(i in 1:length(solcross.data$tip1))
{
ifelse(is.na(match(solcross.data$tip1[i],pathd8.tre$tip.label)) | is.na(match(solcross.data$tip2[i],pathd8.tre$tip.label)),d[i]<-NA,
d[i]<-cophenetic.phylo(pathd8.tre)[solcross.data$tip1[i],solcross.data$tip2[i]])
}
return(d)
}
pairwise.dist <- get.tree.dist(cross.data,nj.gg)
max(pairwise.dist[pairwise.dist!=0])
library(ggtree) # tree plotting
library(DECIPHER)
library(RCurl) # web page loading
library(phangorn)
library(phytools)
library(ape)
library("knitr")
library(DECIPHER)
library(treeio)
cvx.metadata <- read.csv('../data/cvx_hostdata_v3.csv', stringsAsFactors = FALSE)
tre.f  <- "../data/iqtree-output/genbank_kr_consensus_extraction_al_trimmed.fasta.newick"
cvx.newick.tree <- read.newick(tre.f)
#create vector for host information
nj.gg <- reroot(cvx.newick.tree, node.number = 114)
hostinfo <- c()
hostinfo <- data.frame(nj.gg$tip.label)
#rename tree tips and populate vector
tip.rename.org = function(tree,dataframe){
for(i in 1:length(tree$tip.label)){
hostinfo$nj.gg.tip.label[i] <<- dataframe$host[grep(tree$tip.label[i],dataframe$Name)]
#uncomment these for troubleshooting:
#print(i)
#print(tree$tip.label[i])
#print(dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)])
tree$tip.label[i]<-dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)]
}
tree
}
nj.gg <- tip.rename.org(nj.gg,cvx.metadata)
plot.new()
plot(nj.gg,cex=0.25)
tips.store <- identify(nj.gg, nodes = TRUE, tips = TRUE,labels = FALSE, quiet = FALSE)$tips
tips.cross <- c()
for (i in 1:length(tips.store)){
tips.cross[i] <- nj.gg$tip.label[tips.store[i]]
}
cross.data <- expand.grid(tip1 = tips.cross, tip2 = tips.cross)
d<- c()
get.tree.dist = function(solcross.data,pathd8.tre)
{
for(i in 1:length(solcross.data$tip1))
{
ifelse(is.na(match(solcross.data$tip1[i],pathd8.tre$tip.label)) | is.na(match(solcross.data$tip2[i],pathd8.tre$tip.label)),d[i]<-NA,
d[i]<-cophenetic.phylo(pathd8.tre)[solcross.data$tip1[i],solcross.data$tip2[i]])
}
return(d)
}
pairwise.dist <- get.tree.dist(cross.data,nj.gg)
max(pairwise.dist[pairwise.dist!=0])
knitr::opts_chunk$set(error = TRUE)
#install needed packages
install.packages('BiocManager')# This option gave B errors; repos=c('https://cran.rstudio.com'), ask=F)
BiocManager::install('DECIPHER')
library(ggtree) # tree plotting
library(DECIPHER)
library(RCurl) # web page loading
library(phangorn)
library(phytools)
library(ape)
library("knitr")
library(DECIPHER)
library(treeio)
cvx.metadata <- read.csv('../data/cvx_hostdata_v3.csv', stringsAsFactors = FALSE)
tre.f  <- "../data/iqtree-output/genbank_kr_consensus_extraction_al_trimmed.fasta.newick"
cvx.newick.tree <- read.newick(tre.f)
#create vector for host information
nj.gg <- reroot(cvx.newick.tree, node.number = 114)
hostinfo <- c()
hostinfo <- data.frame(nj.gg$tip.label)
#rename tree tips and populate vector
tip.rename.org = function(tree,dataframe){
for(i in 1:length(tree$tip.label)){
hostinfo$nj.gg.tip.label[i] <<- dataframe$host[grep(tree$tip.label[i],dataframe$Name)]
#uncomment these for troubleshooting:
#print(i)
#print(tree$tip.label[i])
#print(dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)])
tree$tip.label[i]<-dataframe$Organism[grep(tree$tip.label[i],dataframe$Name)]
}
tree
}
nj.gg <- tip.rename.org(nj.gg,cvx.metadata)
plot.new()
plot(nj.gg,cex=0.25)
tips.store <- identify(nj.gg, nodes = TRUE, tips = TRUE,labels = FALSE, quiet = FALSE)$tips
plot(nj.gg,cex=0.25)
tips.store <- identify(nj.gg, nodes = TRUE, tips = TRUE,labels = FALSE, quiet = FALSE)$tips
plot.new()
plot.new()
