cvxrename(testfasta, mdpath)
#Renaming fasta function - still needs work
cvxrename <- function(filepath, metadatapath) {
md <- read.csv(metadatapath, stringsAsFactors = FALSE)
tmpfile <- readChar(filepath,999999)
for (i in (1:length(md$Name))){
#print(i)
print (md$Name[i])
print (md$Organism[i])
#gsub(pattern, replacement, file)
tmpfile <<-  gsub(md$Name[i], md$Organism[i], tmpfile, fixed = T)
}
write(tmpfile, file = "Test1.fasta")
}
paste("hello" + "he")
paste("hello","he")
#Percent seq .csv production, given .fasta file.
perc.seq <- function(filepath) {
aligned.cvx.phydat <- read.phyDat(filepath, format='fasta', type='DNA')
aligned.cvx.bin <- as.DNAbin(aligned.cvx.phydat)
dist.matrixCP <- dist.dna(aligned.cvx.bin, model = "raw", as.matrix=TRUE)
write.csv(dist.matrixCP, file=paste(filename, "percent sequence"))
}
perc.seq(accesslist)
library(ggtree) # tree plotting
library(phangorn)
library(phytools)
library(ape)
library(DECIPHER)
library(treeio)
#Percent seq .csv production, given .fasta file.
perc.seq <- function(filepath) {
aligned.cvx.phydat <- read.phyDat(filepath, format='fasta', type='DNA')
aligned.cvx.bin <- as.DNAbin(aligned.cvx.phydat)
dist.matrixCP <- dist.dna(aligned.cvx.bin, model = "raw", as.matrix=TRUE)
write.csv(dist.matrixCP, file=paste(filename, "percent sequence"))
}
perc.seq(accesslist)
#Percent seq .csv production, given .fasta file.
perc.seq <- function(filepath) {
aligned.cvx.phydat <- read.phyDat(filepath, format='fasta', type='DNA')
aligned.cvx.bin <- as.DNAbin(aligned.cvx.phydat)
dist.matrixCP <- dist.dna(aligned.cvx.bin, model = "raw", as.matrix=TRUE)
write.csv(dist.matrixCP, file=filename)
}
perc.seq(accesslist)
#Percent seq .csv production, given .fasta file.
perc.seq <- function(filepath) {
aligned.cvx.phydat <- read.phyDat(filepath, format='fasta', type='DNA')
aligned.cvx.bin <- as.DNAbin(aligned.cvx.phydat)
dist.matrixCP <- dist.dna(aligned.cvx.bin, model = "raw", as.matrix=TRUE)
write.csv(dist.matrixCP, file="test")
}
perc.seq(accesslist[1])
#Percent seq .csv production, given .fasta file.
perc.seq <- function(filepath) {
aligned.cvx.phydat <- read.phyDat(filepath, format='fasta', type='DNA')
aligned.cvx.bin <- as.DNAbin(aligned.cvx.phydat)
dist.matrixCP <- dist.dna(aligned.cvx.bin, model = "raw", as.matrix=TRUE)
write.csv(dist.matrixCP, file="test.csv")
}
perc.seq(accesslist[1])
perc.seq(accesslist[2])
perc.seq(accesslist[3])
perc.seq(accesslist[4])
perc.seq(accesslist[5])
perc.seq(accesslist[5])
perc.seq(accesslist[6])
#Percent seq .csv production, given .fasta file.
perc.seq <- function(filepath) {
aligned.cvx.phydat <- read.phyDat(filepath, format='fasta', type='DNA')
aligned.cvx.bin <- as.DNAbin(aligned.cvx.phydat)
dist.matrixCP <- dist.dna(aligned.cvx.bin, model = "raw", as.matrix=TRUE)
for (i in (1:length(accesslist))) {
write.csv(dist.matrixCP, file=i)
}
}
perc.seq(accesslist)
#Percent seq .csv production, given .fasta file.
perc.seq <- function(filepath) {
aligned.cvx.phydat <- read.phyDat(filepath, format='fasta', type='DNA')
aligned.cvx.bin <- as.DNAbin(aligned.cvx.phydat)
dist.matrixCP <- dist.dna(aligned.cvx.bin, model = "raw", as.matrix=TRUE)
for (i in (1:length(accesslist))) {
print(i)
write.csv(dist.matrixCP, file=i)
}
}
perc.seq(accesslist)
write.csv(dist.matrixCP, file=paste(i))
#Percent seq .csv production, given .fasta file.
perc.seq <- function(filepath) {
aligned.cvx.phydat <- read.phyDat(filepath, format='fasta', type='DNA')
aligned.cvx.bin <- as.DNAbin(aligned.cvx.phydat)
dist.matrixCP <- dist.dna(aligned.cvx.bin, model = "raw", as.matrix=TRUE)
for (i in (1:length(accesslist))) {
print(i)
write.csv(dist.matrixCP, file=paste(i))
}
}
#Percent seq .csv production, given .fasta file.
perc.seq <- function(filepath) {
aligned.cvx.phydat <- read.phyDat(filepath, format='fasta', type='DNA')
aligned.cvx.bin <- as.DNAbin(aligned.cvx.phydat)
dist.matrix <- dist.dna(aligned.cvx.bin, model = "raw", as.matrix=TRUE)
for (i in (1:length(accesslist))) {
print(i)
write.csv(dist.matrix, file=paste(i))
}
}
perc.seq(accesslist)
write.csv(dist.matrix, file=paste(i, ".csv")
}
}
perc.seq(accesslist[1])
write.csv(dist.matrix, file=paste(i, ".csv"))
#Percent seq .csv production, given .fasta file.
perc.seq <- function(filepath) {
aligned.cvx.phydat <- read.phyDat(filepath, format='fasta', type='DNA')
aligned.cvx.bin <- as.DNAbin(aligned.cvx.phydat)
dist.matrix <- dist.dna(aligned.cvx.bin, model = "raw", as.matrix=TRUE)
for (i in (1:length(accesslist))) {
print(i)
write.csv(dist.matrix, file=paste(i, ".csv"))
}
}
perc.seq(accesslist[1])
#Percent seq .csv production, given .fasta file.
perc.seq <- function(filepath) {
for (i in (1:length(accesslist))) {
aligned.cvx.phydat <- read.phyDat(filepath, format='fasta', type='DNA')
aligned.cvx.bin <- as.DNAbin(aligned.cvx.phydat)
dist.matrix <- dist.dna(aligned.cvx.bin, model = "raw", as.matrix=TRUE)
print(i)
write.csv(dist.matrix, file=paste(i, ".csv"))
}
}
perc.seq(accesslist[1])
perc.seq(accesslist[1])
perc.seq(accesslist)
#Percent seq .csv production, given .fasta file.
perc.seq <- function(filepath) {
aligned.cvx.phydat <- read.phyDat(filepath, format='fasta', type='DNA')
aligned.cvx.bin <- as.DNAbin(aligned.cvx.phydat)
dist.matrix <- dist.dna(aligned.cvx.bin, model = "raw", as.matrix=TRUE)
write.csv(dist.matrix, file="test")
}
perc.seq(accesslist[1])
#Percent seq .csv production, given .fasta file.
perc.seq <- function(filepath) {
aligned.cvx.phydat <- read.phyDat(filepath, format='fasta', type='DNA')
aligned.cvx.bin <- as.DNAbin(aligned.cvx.phydat)
dist.matrix <- dist.dna(aligned.cvx.bin, model = "raw", as.matrix=TRUE)
write.csv(dist.matrix, file="test.csv")
}
perc.seq(accesslist[1])
#Percent seq .csv production, given .fasta file.
perc.seq <- function(filepath) {
aligned.cvx.phydat <- read.phyDat(filepath, format='fasta', type='DNA')
aligned.cvx.bin <- as.DNAbin(aligned.cvx.phydat)
dist.matrix <- dist.dna(aligned.cvx.bin, model = "raw", as.matrix=TRUE)
write.csv(dist.matrix, file="test.csv")
print(filepath)
}
perc.seq(accesslist[1])
perc.seq(accesslist[2])
perc.seq(accesslist[3])
perc.seq(accesslist[2])
perc.seq(accesslist[4])
perc.seq(accesslist[5])
perc.seq(accesslist[6])
accesslist <- c(
"/Users/alexa/Desktop/cactusvirusx/data/data_v3/5_CP_nostop.fasta",
"/Users/alexa/Desktop/cactusvirusx/data/data_v3/4_TGB3_nostop.fasta",
"/Users/alexa/Desktop/cactusvirusx/data/data_v3/3_TGB2_nostop.fasta",
"/Users/alexa/Desktop/cactusvirusx/data/data_v3/2_TGB1_nostop.fasta",
"/Users/alexa/Desktop/cactusvirusx/data/data_v3/1_RdRp_nostop.fasta",
"/Users/alexa/Desktop/cactusvirusx/data/data_v3/0_full-aln.fasta")
#Percent seq .csv production, given .fasta file.
perc.seq <- function(filepath) {
aligned.cvx.phydat <- read.phyDat(filepath, format='fasta', type='DNA')
aligned.cvx.bin <- as.DNAbin(aligned.cvx.phydat)
dist.matrix <- dist.dna(aligned.cvx.bin, model = "raw", as.matrix=TRUE)
write.csv(dist.matrix, file="test.csv")
print(filepath)
}
perc.seq(accesslist[1])
perc.seq(accesslist[2])
perc.seq(accesslist[3])
help(dist.dna)
?as.DNAbin
perc.seq(accesslist[2])
perc.seq(accesslist[2])
read.fasta(accesslist[2])
perc.seq("/Users/alexa/Desktop/cactusvirusx/data/data_v3/2_TGB1.fasta")
perc.seq(accesslist[2])
accesslist[2]
perc.seq("/Users/alexa/Desktop/cactusvirusx/data/data_v3/4_TGB3_nostop.fasta")
perc.seq("/Users/alexa/Desktop/cactusvirusx/data/data_v3/4_TGB3.fasta")
perc.seq(accesslist[3])
perc.seq(accesslist[4])
accesslist[4]
perc.seq(accesslist[5])
#Renaming fasta function - still needs work
cvxrename <- function(filepath, metadatapath) {
md <- read.csv(metadatapath, stringsAsFactors = FALSE)
tmpfile <- readChar(filepath,999999)
for (i in (1:length(md$Name))){
#print(i)
print (md$Name[i])
print (md$Organism[i])
#gsub(pattern, replacement, file)
tmpfile <<-  gsub(md$Name[i], md$Organism[i], tmpfile, fixed = T)
}
write(tmpfile, file = "Test1.fasta")
}
testfasta <- "/Users/alexa/Desktop/cactusvirusx/tmpfastatroubleshooting.fasta"
#Renaming fasta function - still needs work
cvxrename <- function(filepath, metadatapath) {
md <- read.csv(metadatapath, stringsAsFactors = FALSE)
tmpfile <- readChar(filepath,999999)
for (i in (1:length(md$Name))){
print(i)
print (md$Name[i])
print (md$Organism[i])
#gsub(pattern, replacement, file)
tmpfile <<-  gsub(md$Name[i], md$Organism[i], tmpfile, fixed = T)
print(tmpfile)
}
write(tmpfile, file = "Test1.fasta")
}
mdpath <- '/Users/alexa/Desktop/cactusvirusx/data/data_v1/cvx_hostdata_v3.csv'
cvxrename(testfasta, mdpath)
tf <- readChar(testfasta, 99999)
gsub("KU697313", md$Organism[1], tf, fixed = T)
testfasta
tf
gsub("KU697313", md$Organism[1], tf, fixed = T)[1]
gsub("KU697313", md$Organism[1], tf, fixed = T)[2]
tf <- readChar(testfasta, 99999)
gsub("KU697313", md$Organism[1], tf, fixed = T)[2]
cvxrename(testfasta, mdpath)
return(tmpfile)
testfasta
tf <- readChar(testfasta, 99999)
md
for (i in (1:length(md$Name))){
print(i)
print (md$Name[i])
print (md$Organism[i])
#gsub(pattern, replacement, file)
tmpfile <<-  gsub(md$Name[i], md$Organism[i], tf, fixed = T)
return(tmpfile)
}
for (i in (1:length(md$Name))){
print(i)
print (md$Name[i])
print (md$Organism[i])
#gsub(pattern, replacement, file)
tf <<-  gsub(md$Name[i], md$Organism[i], tf, fixed = T)
}
tf
#Renaming fasta function - still needs work
cvxrename <- function(filepath, metadatapath) {
md <- read.csv(metadatapath, stringsAsFactors = FALSE)
tmpfile <- readChar(filepath,999999)
for (i in (1:length(md$Name))){
print(i)
print (md$Name[i])
print (md$Organism[i])
#gsub(pattern, replacement, file)
tmpfile <<-  gsub(md$Name[i], md$Organism[i], tmpfile, fixed = T)
}
print(tmpfile)
#write(tmpfile, file = "Test1.fasta")
tmpfile
}
mdpath <- '/Users/alexa/Desktop/cactusvirusx/data/data_v1/cvx_hostdata_v3.csv'
cvxrename(testfasta, mdpath)
#Renaming fasta function - still needs work
cvxrename <- function(filepath, metadatapath) {
md <- read.csv(metadatapath, stringsAsFactors = FALSE)
tmpfile <- readChar(filepath,999999)
for (i in (1:length(md$Name))){
print(i)
print (md$Name[i])
print (md$Organism[i])
#gsub(pattern, replacement, file)
tmpfile <<-  gsub(md$Name[i], md$Organism[i], tmpfile, fixed = T)
}
print(tmpfile)
#write(tmpfile, file = "Test1.fasta")
return(tmpfile)
}
cvxrename(testfasta, mdpath)
gsub(md$Name[i], md$Organism[i], testfasta, fixed = T)
gsub(md$Name[i], md$Organism[i], tf, fixed = T)
tf <- readChar(testfasta, 99999)
gsub(md$Name[i], md$Organism[i], tf, fixed = T)
#Renaming fasta function - still needs work
cvxrename <- function(filepath, metadatapath) {
md <- read.csv(metadatapath, stringsAsFactors = FALSE)
tmpfile <- readChar(filepath,999999)
for (i in (1:length(md$Name))){
print(i)
print (md$Name[i])
print (md$Organism[i])
#gsub(pattern, replacement, file)
f <<- gsub(md$Name[i], md$Organism[i], tmpfile, fixed = T)
tmpfile <<- f
}
#write(tmpfile, file = "Test1.fasta")
return(tmpfile)
}
mdpath <- '/Users/alexa/Desktop/cactusvirusx/data/data_v1/cvx_hostdata_v3.csv'
cvxrename(testfasta, mdpath)
for (i in (1:length(md$Name))){
print(i)
print (md$Name[i])
print (md$Organism[i])
#gsub(pattern, replacement, file)
f <- gsub(md$Name[i], md$Organism[i], tf, fixed = T)
tf <<- f
}
tf
for (i in (1:length(20))){
print(i)
print (md$Name[i])
print (md$Organism[i])
#gsub(pattern, replacement, file)
f <- gsub(md$Name[i], md$Organism[i], tmpfile, fixed = T)
tmpfile <<- f
}
for (i in (1:length(20))){
print(i)
print (md$Name[i])
print (md$Organism[i])
#gsub(pattern, replacement, file)
f <- gsub(md$Name[i], md$Organism[i], tf, fixed = T)
tf <<- f
}
tf
tf <- readChar(testfasta, 99999)
for (i in (1:length(20))){
print(i)
print (md$Name[i])
print (md$Organism[i])
#gsub(pattern, replacement, file)
f <- gsub(md$Name[i], md$Organism[i], tf, fixed = T)
tf <<- f
}
tf
for (i in (1:length(30))){
print(i)
print (md$Name[i])
print (md$Organism[i])
#gsub(pattern, replacement, file)
f <- gsub(md$Name[i], md$Organism[i], tf, fixed = T)
tf <<- f
}
tf
for (i in (1:30)){
print(i)
print (md$Name[i])
print (md$Organism[i])
#gsub(pattern, replacement, file)
f <- gsub(md$Name[i], md$Organism[i], tf, fixed = T)
tf <<- f
}
tf
write(tf, file = "Test1.fasta")
tf <- readChar(testfasta, 99999)
#Renaming fasta function - still needs work
cvxrename <- function(filepath, metadatapath) {
md <- read.csv(metadatapath, stringsAsFactors = FALSE)
tmpfile <- readChar(filepath,999999)
for (i in (1:20)){
print(i)
print (md$Name[i])
print (md$Organism[i])
#gsub(pattern, replacement, file)
f <- gsub(md$Name[i], md$Organism[i], tmpfile, fixed = T)
tmpfile <<- f
}
write(tmpfile, file = "Test1.fasta")
}
cvxrename(testfasta, mdpath)
tmpfile
#Renaming fasta function - still needs work
cvxrename <- function(filepath, metadatapath) {
md <- read.csv(metadatapath, stringsAsFactors = FALSE)
tmpfile <- readChar(filepath,999999)
for (i in (1:30)){
print(i)
print (md$Name[i])
print (md$Organism[i])
#gsub(pattern, replacement, file)
f <- gsub(md$Name[i], md$Organism[i], tmpfile, fixed = T)
tmpfile <<- f
}
write(tmpfile, file = "Test1.fasta")
}
cvxrename(testfasta, mdpath)
tempfile()
tmpfile
#Renaming fasta function - still needs work
cvxrename <- function(filepath, metadatapath) {
md <- read.csv(metadatapath, stringsAsFactors = FALSE)
tmpfile <- readChar(filepath,999999)
for (i in (1:30)){
print(i)
print (md$Name[i])
print (md$Organism[i])
#gsub(pattern, replacement, file)
f <- gsub(md$Name[i], md$Organism[i], tmpfile, fixed = T)
tmpfile <<- f
print(tmpfile)
}
write(tmpfile, file = "Test1.fasta")
}
cvxrename(testfasta, mdpath)
#Renaming fasta function - still needs work
cvxrename <- function(filepath, metadatapath) {
md <- read.csv(metadatapath, stringsAsFactors = FALSE)
tmpfile <- readChar(filepath,999999)
for (i in (1:30)){
print(i)
print (md$Name[i])
print (md$Organism[i])
#gsub(pattern, replacement, file)
f <- gsub(md$Name[i], md$Organism[i], tmpfile, fixed = T)
tmpfile <<- f
write(tmpfile, file = "Test1.fasta")
}
}
cvxrename(testfasta, mdpath)
#Renaming fasta function - still needs work
cvxrename <- function(filepath, metadatapath) {
md <- read.csv(metadatapath, stringsAsFactors = FALSE)
tmpfile <- readChar(filepath,999999)
for (i in (1:30)){
#gsub(pattern, replacement, file)
f <- sub(md$Name[i], md$Organism[i], tmpfile, fixed = T)
tmpfile <<- f
write(tmpfile, file = "Test1.fasta")
}
}
cvxrename(testfasta, mdpath)
tf
#Renaming fasta function - still needs work
cvxrename = function(filepath, metadatapath) {
md <- read.csv(metadatapath, stringsAsFactors = FALSE)
tmpfile <- readChar(filepath,999999)
for (i in (1:30)){
#gsub(pattern, replacement, file)
f <- sub(md$Name[i], md$Organism[i], tmpfile, fixed = T)
tmpfile <<- f
write(tmpfile, file = "Test1.fasta")
}
}
cvxrename(testfasta, mdpath)
#Renaming fasta function - still needs work
cvxrename = function(filepath, metadatapath) {
md <- read.csv(metadatapath, stringsAsFactors = FALSE)
tmpfile <- readChar(filepath,999999)
for (i in (1:30)){
#gsub(pattern, replacement, file)
f <<- sub(md$Name[i], md$Organism[i], tmpfile, fixed = T)
tmpfile <<- f
write(tmpfile, file = "Test1.fasta")
}
}
cvxrename(testfasta, mdpath)
tf
for (i in (1:30)){
#gsub(pattern, replacement, file)
tf <- gsub(md$Name[i], md$Organism[i], tf, fixed = T)
write(tf, file = "tf.fasta")}
cvxrename = function(filepath) {
tmpfile <- readChar(filepath,999999)
for (i in (1:30)){
#gsub(pattern, replacement, file)
tmpfile <- gsub(md$Name[i], md$Organism[i], tmpfile, fixed = T)
write(tmpfile, file = "Test1.fasta")
}
}
cvxrename(testfasta)
testfasta
cvxrename = function(filepath) {
tmpfile <- readChar(filepath,999999)
for (i in (1:length(md$Name))){
#gsub(pattern, replacement, file)
tmpfile <- gsub(md$Name[i], md$Organism[i], tmpfile, fixed = T)
write(tmpfile, file = "Test1.fasta")
}
}
cvxrename(testfasta)
cvxrename = function(filepath) {
tmpfile <- readChar(filepath,999999)
for (i in (1:length(md$Name))){
#gsub(pattern, replacement, file)
tmpfile <- gsub(md$Name[i], md$Organism[i], tmpfile, fixed = T)
write(tmpfile, file = "name.fasta")
}
}
cvxrename(accesslist[1])
cvxrename(accesslist[2])
cvxrename(accesslist[3])
cvxrename(accesslist[4])
cvxrename(accesslist[5])
cvxrename(accesslist[6])
cvxrename(accesslist[1])
